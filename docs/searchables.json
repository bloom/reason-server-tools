[{"href": "./index.html", "title": "Home", "contents": "If you find that one of the modules isn&#39;t working how you&#39;d like in it&#39;s current state, our advice is to view the source and copy the module you like straight into your project, making whatever modifications you need for your current use case (you&#39;ll probably have to uninstall this module first, or name the copy something different.)", "rendered": "If you find that one of the modules isn&#39;t working how you&#39;d like in it&#39;s current state, our advice is to <a href=\"https://github.com/bloom/reason-server-tools/tree/master/src\" target=\"_blank\" rel=\"noopener nofollow\" title=\"\" class=\"external-link\">view the source</a> and copy the module you like straight into your project, making whatever modifications you need for your current use case (you&#39;ll probably have to uninstall this module first, or name the copy something different.)", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "Free to use however you like, under the MIT-0 license (attribution not necessary).", "rendered": "Free to use however you like, under the MIT-0 license (attribution not necessary).", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "A collection of modules written by Bloom Built (Day One) to ease the creation of Node.js servers in ReasonML.", "rendered": "A collection of modules written by Bloom Built (Day One) to ease the creation of Node.js servers in ReasonML.", "breadcrumb": "Home"},
{"href": "./index.html#Reason-Server-Tools", "title": "Reason Server Tools", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./api/Request.html#value-finishBinary", "title": "finishBinary", "contents": "finishBinary request pomWithError binaryResponse error ", "rendered": "<h4 class='item'>let finishBinary: <a href=\"./api/Request.html#type-request\">request</a> => <a href=\"./api/Pom.html#type-pomWithError\" title=\"Pom.pomWithError\">pomWithError</a>(\n  <a href=\"./api/Request.html#type-binaryResponse\">binaryResponse</a>,\n  <a href=\"./api/Request.html#type-error\">error</a>\n)</h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-finish", "title": "finish", "contents": "finish request pomWithError response error ", "rendered": "<h4 class='item'>let finish: <a href=\"./api/Request.html#type-request\">request</a> => <a href=\"./api/Pom.html#type-pomWithError\" title=\"Pom.pomWithError\">pomWithError</a>(<a href=\"./api/Request.html#type-response\">response</a>, <a href=\"./api/Request.html#type-error\">error</a>)</h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-toPromiseExpectBinary", "title": "toPromiseExpectBinary", "contents": "toPromiseExpectBinary request pomWithError binaryResponse error ", "rendered": "<h4 class='item'>let toPromiseExpectBinary: <a href=\"./api/Request.html#type-request\">request</a> => <a href=\"./api/Pom.html#type-pomWithError\" title=\"Pom.pomWithError\">pomWithError</a>(\n  <a href=\"./api/Request.html#type-binaryResponse\">binaryResponse</a>,\n  <a href=\"./api/Request.html#type-error\">error</a>\n)</h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-toPromise", "title": "toPromise", "contents": "toPromise request pomWithError response error ", "rendered": "<h4 class='item'>let toPromise: <a href=\"./api/Request.html#type-request\">request</a> => <a href=\"./api/Pom.html#type-pomWithError\" title=\"Pom.pomWithError\">pomWithError</a>(<a href=\"./api/Request.html#type-response\">response</a>, <a href=\"./api/Request.html#type-error\">error</a>)</h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-timeout", "title": "timeout", "contents": "timeout request Js t request  ", "rendered": "<h4 class='item'>let timeout: (\n  <a href=\"./api/Request.html#type-request\">request</a>,\n  Js.t(\n    &lt; deadline : int option; response : int option &gt;\n  )\n) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-auth", "title": "auth", "contents": "auth request string string request  username password", "rendered": "<h4 class='item'>let auth: (\n  <a href=\"./api/Request.html#type-request\">request</a>,\n  ~username: string,\n  ~password: string\n) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-ok", "title": "ok", "contents": "ok request response bool  request  ", "rendered": "<h4 class='item'>let ok: (<a href=\"./api/Request.html#type-request\">request</a>, <a href=\"./api/Request.html#type-response\">response</a> => bool) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-set", "title": "set", "contents": "set request string string request   ", "rendered": "<h4 class='item'>let set: (<a href=\"./api/Request.html#type-request\">request</a>, string, string) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-attachJsonAsFile", "title": "attachJsonAsFile", "contents": "attachJsonAsFile request string Js Json t request   ", "rendered": "<h4 class='item'>let attachJsonAsFile: (\n  <a href=\"./api/Request.html#type-request\">request</a>,\n  string,\n  Js.Json.t\n) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-attachBuffer", "title": "attachBuffer", "contents": "attachBuffer request string Node buffer string request    ", "rendered": "<h4 class='item'>let attachBuffer: (\n  <a href=\"./api/Request.html#type-request\">request</a>,\n  string,\n  Node.buffer,\n  string\n) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-stringField", "title": "stringField", "contents": "stringField request string string request   ", "rendered": "<h4 class='item'>let stringField: (<a href=\"./api/Request.html#type-request\">request</a>, string, string) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-sendBuffer", "title": "sendBuffer", "contents": "sendBuffer request Node Buffer t request  ", "rendered": "<h4 class='item'>let sendBuffer: (<a href=\"./api/Request.html#type-request\">request</a>, Node.Buffer.t) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-retry", "title": "retry", "contents": "retry request int request  ", "rendered": "<h4 class='item'>let retry: (<a href=\"./api/Request.html#type-request\">request</a>, int) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-delete", "title": "delete", "contents": "delete string request ", "rendered": "<h4 class='item'>let delete: string => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-putBuffer", "title": "putBuffer", "contents": "putBuffer string Node Buffer t request  ", "rendered": "<h4 class='item'>let putBuffer: (string, Node.Buffer.t) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-putJson", "title": "putJson", "contents": "putJson string Js Json t request  ", "rendered": "<h4 class='item'>let putJson: (string, Js.Json.t) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-put", "title": "put", "contents": "put string request ", "rendered": "<h4 class='item'>let put: string => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-postBuffer", "title": "postBuffer", "contents": "postBuffer string Node Buffer t request  ", "rendered": "<h4 class='item'>let postBuffer: (string, Node.Buffer.t) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-postJson", "title": "postJson", "contents": "postJson string Js Json t request  ", "rendered": "<h4 class='item'>let postJson: (string, Js.Json.t) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-post", "title": "post", "contents": "post string request ", "rendered": "<h4 class='item'>let post: string => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-get", "title": "get", "contents": "get string request ", "rendered": "<h4 class='item'>let get: string => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#type-error", "title": "error", "contents": "error status option int message string", "rendered": "<h4 class='item'>type error = {status: option(int), message: string}</h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#type-rawError", "title": "rawError", "contents": "rawError Js t", "rendered": "<h4 class='item'>type rawError = Js.t(\n  &lt; message : string; status : int option &gt;\n)</h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#type-binaryResponse", "title": "binaryResponse", "contents": "binaryResponse Js t", "rendered": "<h4 class='item'>type binaryResponse = Js.t(\n  &lt; body : Node.Buffer.t; headers : string Js.Dict.t; status : int;\n  text : string &gt;\n)</h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#type-response", "title": "response", "contents": "response Js t", "rendered": "<h4 class='item'>type response = Js.t(\n  &lt; body : Js.Json.t; headers : string Js.Dict.t; status : int &gt;\n)</h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#type-request", "title": "request", "contents": "request ", "rendered": "<h4 class='item'>type request</h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html", "title": "Request", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Request"},
{"href": "./api/Request.html", "title": "Request", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Request"},
{"href": "./api/Request.html#Request", "title": "Request", "contents": "", "rendered": "", "breadcrumb": "Request"},
{"href": "./api/Postgrator.html#value-migrate", "title": "migrate", "contents": "migrate string Js Promise t unit ", "rendered": "<h4 class='item'>let migrate: string => Js.Promise.t(unit)</h4>", "breadcrumb": "Postgrator"},
{"href": "./api/Postgrator.html#type-appliedMigration", "title": "appliedMigration", "contents": "appliedMigration ", "rendered": "<h4 class='item'>type appliedMigration</h4>", "breadcrumb": "Postgrator"},
{"href": "./api/Postgrator.html#value-make", "title": "make", "contents": "make Js t t ", "rendered": "<h4 class='item'>let make: Js.t(\n  &lt; connectionString : string; driver : string; migrationDirectory : string;\n  schemaTable : string &gt;\n) => <a href=\"./api/Postgrator.html#type-t\">t</a></h4>", "breadcrumb": "Postgrator"},
{"href": "./api/Postgrator.html#type-t", "title": "t", "contents": "t ", "rendered": "<h4 class='item'>type t</h4>", "breadcrumb": "Postgrator"},
{"href": "./api/Postgrator.html", "title": "Postgrator", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Postgrator"},
{"href": "./api/Postgrator.html", "title": "Postgrator", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Postgrator"},
{"href": "./api/Postgrator.html#Postgrator", "title": "Postgrator", "contents": "", "rendered": "", "breadcrumb": "Postgrator"},
{"href": "./api/Pom.html#value-let_", "title": "let_", "contents": "let_ pomWithError pomWithError  pomWithError  ", "rendered": "<h4 class='item'>let let_: (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('a, 'b),\n  'a => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('c, 'b)\n) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('c, 'b)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-toJsPromise", "title": "toJsPromise", "contents": "toJsPromise pom Js Promise t ", "rendered": "<h4 class='item'>let toJsPromise: <a href=\"./api/Pom.html#type-pom\">pom</a>('a) => Js.Promise.t('a)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-fromJsPromise", "title": "fromJsPromise", "contents": "fromJsPromise Js Promise t pomWithError Js Promise error ", "rendered": "<h4 class='item'>let fromJsPromise: Js.Promise.t('a) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>(\n  'a,\n  Js.Promise.error\n)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-allArray", "title": "allArray", "contents": "allArray array pom pom array ", "rendered": "<h4 class='item'>let allArray: array(<a href=\"./api/Pom.html#type-pom\">pom</a>('a)) => <a href=\"./api/Pom.html#type-pom\">pom</a>(array('a))</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-all", "title": "all", "contents": "all list pom pom list ", "rendered": "<h4 class='item'>let all: list(<a href=\"./api/Pom.html#type-pom\">pom</a>('a)) => <a href=\"./api/Pom.html#type-pom\">pom</a>(list('a))</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-!>=", "title": "!>=", "contents": "!>= pomWithError pomWithError  pomWithError  ", "rendered": "<h4 class='item'>let !>=: (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err),\n  'err => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err)\n) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-flatMapFromError", "title": "flatMapFromError", "contents": "flatMapFromError pomWithError pomWithError  pomWithError  ", "rendered": "<h4 class='item'>let flatMapFromError: (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err),\n  'err => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err)\n) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-mergeErr", "title": "mergeErr", "contents": "mergeErr pomWithError pom ", "rendered": "<h4 class='item'>let mergeErr: <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('a, 'a) => <a href=\"./api/Pom.html#type-pom\">pom</a>('a)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-recover", "title": "recover", "contents": "recover pomWithError  pom  ", "rendered": "<h4 class='item'>let recover: (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err),\n  'err => 'data\n) => <a href=\"./api/Pom.html#type-pom\">pom</a>('data)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-<!>", "title": "<!>", "contents": "<!> pomWithError  pomWithError  ", "rendered": "<h4 class='item'>let <!>: (<a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('a, 'b), 'b => 'c) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>(\n  'a,\n  'c\n)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-mapErr", "title": "mapErr", "contents": "mapErr pomWithError  pomWithError  ", "rendered": "<h4 class='item'>let mapErr: (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err),\n  'err => 'err2\n) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err2)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value->->", "title": ">->", "contents": ">-> pomWithError unit  pomWithError  ", "rendered": "<h4 class='item'>let >->: (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err),\n  'data => unit\n) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-tap", "title": "tap", "contents": "tap pomWithError unit  pomWithError  ", "rendered": "<h4 class='item'>let tap: (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err),\n  'data => unit\n) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-<?>", "title": "<?>", "contents": "<?> pomWithError Belt Result t  pomWithError  ", "rendered": "<h4 class='item'>let <?>: (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('a, 'err),\n  'a => Belt.Result.t('b, 'err)\n) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('b, 'err)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-try_", "title": "try_", "contents": "try_ pomWithError Belt Result t  pomWithError  ", "rendered": "<h4 class='item'>let try_: (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('a, 'err),\n  'a => Belt.Result.t('b, 'err)\n) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('b, 'err)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-wait", "title": "wait", "contents": "wait pomWithError Belt Result t unit  pom unit  ", "rendered": "<h4 class='item'>let wait: (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err),\n  Belt.Result.t('data, 'err) => unit\n) => <a href=\"./api/Pom.html#type-pom\">pom</a>(unit)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value->>=", "title": ">>=", "contents": ">>= pomWithError pomWithError  pomWithError  ", "rendered": "<h4 class='item'>let >>=: (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('a, 'b),\n  'a => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('c, 'b)\n) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('c, 'b)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-flatMap", "title": "flatMap", "contents": "flatMap pomWithError pomWithError  pomWithError  ", "rendered": "<h4 class='item'>let flatMap: (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('a, 'err),\n  'a => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('b, 'err)\n) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('b, 'err)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-<$>", "title": "<$>", "contents": "<$> pomWithError  pomWithError  ", "rendered": "<h4 class='item'>let <$>: (<a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('a, 'b), 'a => 'c) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>(\n  'c,\n  'b\n)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-map", "title": "map", "contents": "map pomWithError  pomWithError  ", "rendered": "<h4 class='item'>let map: (<a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('a, 'err), 'a => 'b) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>(\n  'b,\n  'err\n)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-rejected", "title": "rejected", "contents": "rejected pomWithError ", "rendered": "<h4 class='item'>let rejected: 'a => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('b, 'a)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-resolved", "title": "resolved", "contents": "resolved pomWithError ", "rendered": "<h4 class='item'>let resolved: 'a => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('a, 'b)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-fromCallback", "title": "fromCallback", "contents": "fromCallback nodeCallback unit  pomWithError ", "rendered": "<h4 class='item'>let fromCallback: <a href=\"./api/Pom.html#type-nodeCallback\">nodeCallback</a>(\n  'err,\n  'data\n) => unit => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#type-nodeCallback", "title": "nodeCallback", "contents": "nodeCallback unit  ", "rendered": "<h4 class='item'>type nodeCallback('err, 'data) = ('err, 'data) => unit</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-make", "title": "make", "contents": "make unit pomWithError unit  unit  ", "rendered": "<h4 class='item'>let make: unit => (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('a, 'b),\n  'a => unit,\n  'b => unit\n)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#type-pom", "title": "pom", "contents": "pom pomWithError unit", "rendered": "<h4 class='item'>type pom('data) = <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, unit)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#type-pomWithError", "title": "pomWithError", "contents": "pomWithError ", "rendered": "<h4 class='item'>type pomWithError('data, 'err)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html", "title": "Pom", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Pom"},
{"href": "./api/Pom.html", "title": "Pom", "contents": "Hopefully more docs later!", "rendered": "Hopefully more docs later!", "breadcrumb": "Pom"},
{"href": "./api/Pom.html", "title": "Pom", "contents": "Poms are richer alternatives to promises that make error handling\nrequired and explicit. They aren&#39;t much more than the combination\nof JS promises and Reason Results. The value lies in the functions\nprovided for easy control flow.", "rendered": "Poms are richer alternatives to promises that make error handling\nrequired and explicit. They aren&#39;t much more than the combination\nof JS promises and Reason Results. The value lies in the functions\nprovided for easy control flow.", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#Pom", "title": "Pom", "contents": "", "rendered": "", "breadcrumb": "Pom"},
{"href": "./api/Pg.html#value-poolStats", "title": "poolStats", "contents": "poolStats pool string ", "rendered": "<h4 class='item'>let poolStats: <a href=\"./api/Pg.html#type-pool\">pool</a> => string</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#value-onRemove", "title": "onRemove", "contents": "onRemove pool client unit  unit  ", "rendered": "<h4 class='item'>let onRemove: (<a href=\"./api/Pg.html#type-pool\">pool</a>, <a href=\"./api/Pg.html#type-client\">client</a> => unit) => unit</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#value-onError", "title": "onError", "contents": "onError pool Js Exn t client unit   unit  ", "rendered": "<h4 class='item'>let onError: (<a href=\"./api/Pg.html#type-pool\">pool</a>, (Js.Exn.t, <a href=\"./api/Pg.html#type-client\">client</a>) => unit) => unit</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#value-onAcquire", "title": "onAcquire", "contents": "onAcquire pool client unit  unit  ", "rendered": "<h4 class='item'>let onAcquire: (<a href=\"./api/Pg.html#type-pool\">pool</a>, <a href=\"./api/Pg.html#type-client\">client</a> => unit) => unit</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#value-onConnect", "title": "onConnect", "contents": "onConnect pool client unit  unit  ", "rendered": "<h4 class='item'>let onConnect: (<a href=\"./api/Pg.html#type-pool\">pool</a>, <a href=\"./api/Pg.html#type-client\">client</a> => unit) => unit</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#value-query", "title": "query", "contents": "query pool queryPayload pomWithError dbResult Js Promise error  ", "rendered": "<h4 class='item'>let query: (<a href=\"./api/Pg.html#type-pool\">pool</a>, <a href=\"./api/Pg.html#type-queryPayload\">queryPayload</a>) => <a href=\"./api/Pom.html#type-pomWithError\" title=\"Pom.pomWithError\">pomWithError</a>(\n  <a href=\"./api/Pg.html#type-dbResult\">dbResult</a>,\n  Js.Promise.error\n)</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#value-_query", "title": "_query", "contents": "_query pool queryPayload Js Promise t dbResult  ", "rendered": "<h4 class='item'>let _query: (<a href=\"./api/Pg.html#type-pool\">pool</a>, <a href=\"./api/Pg.html#type-queryPayload\">queryPayload</a>) => Js.Promise.t(<a href=\"./api/Pg.html#type-dbResult\">dbResult</a>)</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#type-queryPayload", "title": "queryPayload", "contents": "queryPayload Js t", "rendered": "<h4 class='item'>type queryPayload = Js.t(\n  &lt; text : string; values : values &gt;\n)</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#type-values", "title": "values", "contents": "values ", "rendered": "<h4 class='item'>type values</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#value-Types.parseDate", "title": "Types.parseDate", "contents": "parseDate Js Date t string ", "rendered": "<h4 class='item'>let parseDate: Js.Date.t => string</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#value-Types.setTypeParserD", "title": "Types.setTypeParserD", "contents": "setTypeParserD t int Js Date t  unit   ", "rendered": "<h4 class='item'>let setTypeParserD: (<a href=\"./api/Pg.html#type-Types.t\">t</a>, int, Js.Date.t => 'a) => unit</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#value-Types.setTypeParser", "title": "Types.setTypeParser", "contents": "setTypeParser t int string  unit   ", "rendered": "<h4 class='item'>let setTypeParser: (<a href=\"./api/Pg.html#type-Types.t\">t</a>, int, string => 'a) => unit</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#value-Types.types", "title": "Types.types", "contents": "types t", "rendered": "<h4 class='item'>let types: <a href=\"./api/Pg.html#type-Types.t\">t</a></h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#value-Types.parseInt", "title": "Types.parseInt", "contents": "parseInt string int ", "rendered": "<h4 class='item'>let parseInt: string => int</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#type-Types.t", "title": "Types.t", "contents": "t ", "rendered": "<h4 class='item'>type t</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#module-Types", "title": "Types", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#module-Types", "title": "Types", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#type-dbResult", "title": "dbResult", "contents": "dbResult Js t", "rendered": "<h4 class='item'>type dbResult = Js.t(&lt; rows : Js.Json.t &gt;)</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#value-makePool", "title": "makePool", "contents": "makePool Js t pool ", "rendered": "<h4 class='item'>let makePool: Js.t(\n  &lt; connectionString : string &gt;\n) => <a href=\"./api/Pg.html#type-pool\">pool</a></h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#type-client", "title": "client", "contents": "client ", "rendered": "<h4 class='item'>type client</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#type-pool", "title": "pool", "contents": "pool Js t", "rendered": "<h4 class='item'>type pool = Js.t(\n  &lt; idleCount : int; totalCount : int; waitingCount : int &gt;\n)</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html", "title": "Pg", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Pg"},
{"href": "./api/Pg.html", "title": "Pg", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#Pg", "title": "Pg", "contents": "", "rendered": "", "breadcrumb": "Pg"},
{"href": "./api/Log.html#value-error5", "title": "error5", "contents": "error5 unit     ", "rendered": "<h4 class='item'>let error5: ('a, 'a, 'a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-error4", "title": "error4", "contents": "error4 unit    ", "rendered": "<h4 class='item'>let error4: ('a, 'a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-error3", "title": "error3", "contents": "error3 unit   ", "rendered": "<h4 class='item'>let error3: ('a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-error2", "title": "error2", "contents": "error2 unit  ", "rendered": "<h4 class='item'>let error2: ('a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-error", "title": "error", "contents": "error unit ", "rendered": "<h4 class='item'>let error: 'a => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-warn5", "title": "warn5", "contents": "warn5 unit     ", "rendered": "<h4 class='item'>let warn5: ('a, 'a, 'a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-warn4", "title": "warn4", "contents": "warn4 unit    ", "rendered": "<h4 class='item'>let warn4: ('a, 'a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-warn3", "title": "warn3", "contents": "warn3 unit   ", "rendered": "<h4 class='item'>let warn3: ('a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-warn2", "title": "warn2", "contents": "warn2 unit  ", "rendered": "<h4 class='item'>let warn2: ('a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-warn", "title": "warn", "contents": "warn unit ", "rendered": "<h4 class='item'>let warn: 'a => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-info5", "title": "info5", "contents": "info5 unit     ", "rendered": "<h4 class='item'>let info5: ('a, 'a, 'a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-info4", "title": "info4", "contents": "info4 unit    ", "rendered": "<h4 class='item'>let info4: ('a, 'a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-info3", "title": "info3", "contents": "info3 unit   ", "rendered": "<h4 class='item'>let info3: ('a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-info2", "title": "info2", "contents": "info2 unit  ", "rendered": "<h4 class='item'>let info2: ('a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-info", "title": "info", "contents": "info unit ", "rendered": "<h4 class='item'>let info: 'a => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-debug5", "title": "debug5", "contents": "debug5 unit     ", "rendered": "<h4 class='item'>let debug5: ('a, 'a, 'a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-debug4", "title": "debug4", "contents": "debug4 unit    ", "rendered": "<h4 class='item'>let debug4: ('a, 'a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-debug3", "title": "debug3", "contents": "debug3 unit   ", "rendered": "<h4 class='item'>let debug3: ('a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-debug2", "title": "debug2", "contents": "debug2 unit  ", "rendered": "<h4 class='item'>let debug2: ('a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-debug", "title": "debug", "contents": "debug unit ", "rendered": "<h4 class='item'>let debug: 'a => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-trace5", "title": "trace5", "contents": "trace5 unit     ", "rendered": "<h4 class='item'>let trace5: ('a, 'a, 'a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-trace4", "title": "trace4", "contents": "trace4 unit    ", "rendered": "<h4 class='item'>let trace4: ('a, 'a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-trace3", "title": "trace3", "contents": "trace3 unit   ", "rendered": "<h4 class='item'>let trace3: ('a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-trace2", "title": "trace2", "contents": "trace2 unit  ", "rendered": "<h4 class='item'>let trace2: ('a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-trace", "title": "trace", "contents": "trace unit ", "rendered": "<h4 class='item'>let trace: 'a => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-instance", "title": "instance", "contents": "instance Pervasives ref instance", "rendered": "<h4 class='item'>let instance: Pervasives.ref(<a href=\"./api/Log.html#type-Pino.instance\" title=\"Pino.instance\">instance</a>)</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-defaultOpts", "title": "defaultOpts", "contents": "defaultOpts Js t", "rendered": "<h4 class='item'>let defaultOpts: Js.t(\n  &lt; level : string; redact : string array; useLevelLabels : bool &gt;\n)</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.error5", "title": "Pino.error5", "contents": "error5 instance unit      ", "rendered": "<h4 class='item'>let error5: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c, 'd, 'e) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.error4", "title": "Pino.error4", "contents": "error4 instance unit     ", "rendered": "<h4 class='item'>let error4: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c, 'd) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.error3", "title": "Pino.error3", "contents": "error3 instance unit    ", "rendered": "<h4 class='item'>let error3: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.error2", "title": "Pino.error2", "contents": "error2 instance unit   ", "rendered": "<h4 class='item'>let error2: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.error", "title": "Pino.error", "contents": "error instance unit  ", "rendered": "<h4 class='item'>let error: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.warn5", "title": "Pino.warn5", "contents": "warn5 instance unit      ", "rendered": "<h4 class='item'>let warn5: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c, 'd, 'e) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.warn4", "title": "Pino.warn4", "contents": "warn4 instance unit     ", "rendered": "<h4 class='item'>let warn4: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c, 'd) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.warn3", "title": "Pino.warn3", "contents": "warn3 instance unit    ", "rendered": "<h4 class='item'>let warn3: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.warn2", "title": "Pino.warn2", "contents": "warn2 instance unit   ", "rendered": "<h4 class='item'>let warn2: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.warn", "title": "Pino.warn", "contents": "warn instance unit  ", "rendered": "<h4 class='item'>let warn: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.info5", "title": "Pino.info5", "contents": "info5 instance unit      ", "rendered": "<h4 class='item'>let info5: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c, 'd, 'e) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.info4", "title": "Pino.info4", "contents": "info4 instance unit     ", "rendered": "<h4 class='item'>let info4: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c, 'd) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.info3", "title": "Pino.info3", "contents": "info3 instance unit    ", "rendered": "<h4 class='item'>let info3: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.info2", "title": "Pino.info2", "contents": "info2 instance unit   ", "rendered": "<h4 class='item'>let info2: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.info", "title": "Pino.info", "contents": "info instance unit  ", "rendered": "<h4 class='item'>let info: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.debug5", "title": "Pino.debug5", "contents": "debug5 instance unit      ", "rendered": "<h4 class='item'>let debug5: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c, 'd, 'e) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.debug4", "title": "Pino.debug4", "contents": "debug4 instance unit     ", "rendered": "<h4 class='item'>let debug4: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c, 'd) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.debug3", "title": "Pino.debug3", "contents": "debug3 instance unit    ", "rendered": "<h4 class='item'>let debug3: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.debug2", "title": "Pino.debug2", "contents": "debug2 instance unit   ", "rendered": "<h4 class='item'>let debug2: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.debug", "title": "Pino.debug", "contents": "debug instance unit  ", "rendered": "<h4 class='item'>let debug: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.trace5", "title": "Pino.trace5", "contents": "trace5 instance unit      ", "rendered": "<h4 class='item'>let trace5: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c, 'd, 'e) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.trace4", "title": "Pino.trace4", "contents": "trace4 instance unit     ", "rendered": "<h4 class='item'>let trace4: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c, 'd) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.trace3", "title": "Pino.trace3", "contents": "trace3 instance unit    ", "rendered": "<h4 class='item'>let trace3: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.trace2", "title": "Pino.trace2", "contents": "trace2 instance unit   ", "rendered": "<h4 class='item'>let trace2: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.trace", "title": "Pino.trace", "contents": "trace instance unit  ", "rendered": "<h4 class='item'>let trace: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.make", "title": "Pino.make", "contents": "make Js t instance ", "rendered": "<h4 class='item'>let make: Js.t('a) => <a href=\"./api/Log.html#type-Pino.instance\">instance</a></h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#module-Pino", "title": "Pino", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Log"},
{"href": "./api/Log.html#type-Pino.instance", "title": "Pino.instance", "contents": "instance ", "rendered": "<h4 class='item'>type instance</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#module-Pino", "title": "Pino", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Log"},
{"href": "./api/Log.html#module-Pino", "title": "Pino", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-SerializeError.go", "title": "SerializeError.go", "contents": "go Js Json t ", "rendered": "<h4 class='item'>let go: 'a => Js.Json.t</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-SerializeError.serializeError", "title": "SerializeError.serializeError", "contents": "serializeError Js Json t ", "rendered": "<h4 class='item'>let serializeError: 'a => Js.Json.t</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#module-SerializeError", "title": "SerializeError", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Log"},
{"href": "./api/Log.html#module-SerializeError", "title": "SerializeError", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Log"},
{"href": "./api/Log.html", "title": "Log", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Log"},
{"href": "./api/Log.html", "title": "Log", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Log"},
{"href": "./api/Log.html#Log", "title": "Log", "contents": "", "rendered": "", "breadcrumb": "Log"},
{"href": "./api/Hashes.html#value-randomId", "title": "randomId", "contents": "randomId unit string ", "rendered": "<h4 class='item'>let randomId: unit => string</h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#value-toString", "title": "toString", "contents": "toString string Node buffer string  ", "rendered": "<h4 class='item'>let toString: (string, Node.buffer) => string</h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#value-randomBytes", "title": "randomBytes", "contents": "randomBytes int Node buffer ", "rendered": "<h4 class='item'>let randomBytes: int => Node.buffer</h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#value-md5OfString", "title": "md5OfString", "contents": "md5OfString string string ", "rendered": "<h4 class='item'>let md5OfString: string => string</h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#value-md5", "title": "md5", "contents": "md5 Node Buffer t string ", "rendered": "<h4 class='item'>let md5: Node.Buffer.t => string</h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#value-sha256", "title": "sha256", "contents": "sha256 string string ", "rendered": "<h4 class='item'>let sha256: string => string</h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#value-sha1", "title": "sha1", "contents": "sha1 Node Buffer t string ", "rendered": "<h4 class='item'>let sha1: Node.Buffer.t => string</h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#value-LegacyMd5.md5OfString", "title": "LegacyMd5.md5OfString", "contents": "md5OfString string string ", "rendered": "<h4 class='item'>let md5OfString: string => string</h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#module-LegacyMd5", "title": "LegacyMd5", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#module-LegacyMd5", "title": "LegacyMd5", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#value-Hash.digest", "title": "Hash.digest", "contents": "digest hash string string  ", "rendered": "<h4 class='item'>let digest: (<a href=\"./api/Hashes.html#type-Hash.hash\">hash</a>, string) => string</h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#value-Hash.updateWithString", "title": "Hash.updateWithString", "contents": "updateWithString hash string unit  ", "rendered": "<h4 class='item'>let updateWithString: (<a href=\"./api/Hashes.html#type-Hash.hash\">hash</a>, string) => unit</h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#value-Hash.update", "title": "Hash.update", "contents": "update hash Node Buffer t unit  ", "rendered": "<h4 class='item'>let update: (<a href=\"./api/Hashes.html#type-Hash.hash\">hash</a>, Node.Buffer.t) => unit</h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#value-Hash.createHash", "title": "Hash.createHash", "contents": "createHash string hash ", "rendered": "<h4 class='item'>let createHash: string => <a href=\"./api/Hashes.html#type-Hash.hash\">hash</a></h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#type-Hash.hash", "title": "Hash.hash", "contents": "hash ", "rendered": "<h4 class='item'>type hash</h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#module-Hash", "title": "Hash", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#module-Hash", "title": "Hash", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html", "title": "Hashes", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html", "title": "Hashes", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#Hashes", "title": "Hashes", "contents": "", "rendered": "", "breadcrumb": "Hashes"},
{"href": "./api/Handler.html#value-handle", "title": "handle", "contents": "handle handler unit Express Middleware t ", "rendered": "<h4 class='item'>let handle: <a href=\"./api/Handler.html#type-handler\">handler</a>(unit) => Express.Middleware.t</h4>", "breadcrumb": "Handler"},
{"href": "./api/Handler.html#value-andThenHandle", "title": "andThenHandle", "contents": "andThenHandle middleware unit handler Express Middleware t  ", "rendered": "<h4 class='item'>let andThenHandle: (\n  <a href=\"./api/Handler.html#type-middleware\">middleware</a>(unit, 'a),\n  <a href=\"./api/Handler.html#type-handler\">handler</a>('a)\n) => Express.Middleware.t</h4>", "breadcrumb": "Handler"},
{"href": "./api/Handler.html#value-middlewareFromExpress", "title": "middlewareFromExpress", "contents": "middlewareFromExpress Express Middleware t middleware ", "rendered": "<h4 class='item'>let middlewareFromExpress: Express.Middleware.t => <a href=\"./api/Handler.html#type-middleware\">middleware</a>(\n  'a,\n  'a\n)</h4>", "breadcrumb": "Handler"},
{"href": "./api/Handler.html#value-_callExpressMiddleware", "title": "_callExpressMiddleware", "contents": "_callExpressMiddleware Express Middleware t _callableExpressMiddleware ", "rendered": "<h4 class='item'>let _callExpressMiddleware: Express.Middleware.t => <a href=\"./api/Handler.html#type-_callableExpressMiddleware\">_callableExpressMiddleware</a></h4>", "breadcrumb": "Handler"},
{"href": "./api/Handler.html#type-_callableExpressMiddleware", "title": "_callableExpressMiddleware", "contents": "_callableExpressMiddleware Express Request t Express Response t option exn unit  unit   ", "rendered": "<h4 class='item'>type _callableExpressMiddleware = (\n  Express.Request.t,\n  Express.Response.t,\n  option(exn) => unit\n) => unit</h4>", "breadcrumb": "Handler"},
{"href": "./api/Handler.html#value-andThen", "title": "andThen", "contents": "andThen middleware middleware middleware  ", "rendered": "<h4 class='item'>let andThen: (\n  <a href=\"./api/Handler.html#type-middleware\">middleware</a>('a, 'b),\n  <a href=\"./api/Handler.html#type-middleware\">middleware</a>('b, 'c)\n) => <a href=\"./api/Handler.html#type-middleware\">middleware</a>('a, 'c)</h4>", "breadcrumb": "Handler"},
{"href": "./api/Handler.html#value-_handleMiddleware", "title": "_handleMiddleware", "contents": "_handleMiddleware middleware unit Express complete Express Middleware t ", "rendered": "<h4 class='item'>let _handleMiddleware: <a href=\"./api/Handler.html#type-middleware\">middleware</a>(\n  unit,\n  Express.complete\n) => Express.Middleware.t</h4>", "breadcrumb": "Handler"},
{"href": "./api/Handler.html#value-_onError500", "title": "_onError500", "contents": "_onError500 handler middleware Express complete ", "rendered": "<h4 class='item'>let _onError500: <a href=\"./api/Handler.html#type-handler\">handler</a>('context) => <a href=\"./api/Handler.html#type-middleware\">middleware</a>(\n  'context,\n  Express.complete\n)</h4>", "breadcrumb": "Handler"},
{"href": "./api/Handler.html#value-pomTo500", "title": "pomTo500", "contents": "pomTo500 Express Response t pom pomWithError Express complete res ", "rendered": "<h4 class='item'>let pomTo500: (\n  ~res: Express.Response.t,\n  <a href=\"./api/Pom.html#type-pom\" title=\"Pom.pom\">pom</a>('a)\n) => <a href=\"./api/Pom.html#type-pomWithError\" title=\"Pom.pomWithError\">pomWithError</a>('a, Express.complete)</h4>", "breadcrumb": "Handler"},
{"href": "./api/Handler.html#type-handler", "title": "handler", "contents": "handler Express Request t Express Response t pom Express complete   ", "rendered": "<h4 class='item'>type handler('context) = (\n  Express.Request.t,\n  Express.Response.t,\n  'context\n) => <a href=\"./api/Pom.html#type-pom\" title=\"Pom.pom\">pom</a>(Express.complete)</h4>", "breadcrumb": "Handler"},
{"href": "./api/Handler.html#type-middleware", "title": "middleware", "contents": "middleware Express Request t Express Response t pomWithError Express complete   ", "rendered": "<h4 class='item'>type middleware('context, 'result) = (\n  Express.Request.t,\n  Express.Response.t,\n  'context\n) => <a href=\"./api/Pom.html#type-pomWithError\" title=\"Pom.pomWithError\">pomWithError</a>('result, Express.complete)</h4>", "breadcrumb": "Handler"},
{"href": "./api/Handler.html", "title": "Handler", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Handler"},
{"href": "./api/Handler.html", "title": "Handler", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Handler"},
{"href": "./api/Handler.html#Handler", "title": "Handler", "contents": "", "rendered": "", "breadcrumb": "Handler"},
{"href": "./api/ExpressExt.html#value-queryJson", "title": "queryJson", "contents": "queryJson Express Request t Js Json t ", "rendered": "<h4 class='item'>let queryJson: Express.Request.t => Js.Json.t</h4>", "breadcrumb": "ExpressExt"},
{"href": "./api/ExpressExt.html", "title": "ExpressExt", "contents": "@rest", "rendered": "@rest", "breadcrumb": "ExpressExt"},
{"href": "./api/ExpressExt.html", "title": "ExpressExt", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "ExpressExt"},
{"href": "./api/ExpressExt.html#ExpressExt", "title": "ExpressExt", "contents": "", "rendered": "", "breadcrumb": "ExpressExt"},
{"href": "./api/DecodeExt.html#value-logFailure", "title": "logFailure", "contents": "logFailure Belt Result t  Belt Result t unit message safeDecoder ", "rendered": "<h4 class='item'>let logFailure: (\n  ~message: 'a,\n  ~safeDecoder: 'a => Belt.Result.t('a, 'a),\n  'a\n) => Belt.Result.t('a, unit)</h4>", "breadcrumb": "DecodeExt"},
{"href": "./api/DecodeExt.html#value-safe", "title": "safe", "contents": "safe  exn unit  Belt Result t unit decoder onFail ", "rendered": "<h4 class='item'>let safe: (\n  ~decoder: 'a => 'a,\n  ~onFail: exn => unit,\n  'a\n) => Belt.Result.t('a, unit)</h4>", "breadcrumb": "DecodeExt"},
{"href": "./api/DecodeExt.html#value-base64", "title": "base64", "contents": "base64 Js Json t Node Buffer t ", "rendered": "<h4 class='item'>let base64: Js.Json.t => Node.Buffer.t</h4>", "breadcrumb": "DecodeExt"},
{"href": "./api/DecodeExt.html#value-stringArrayFromQuery", "title": "stringArrayFromQuery", "contents": "stringArrayFromQuery Js Json t array Js String t ", "rendered": "<h4 class='item'>let stringArrayFromQuery: Js.Json.t => array(Js.String.t)</h4>", "breadcrumb": "DecodeExt"},
{"href": "./api/DecodeExt.html#value-boolFromQuery", "title": "boolFromQuery", "contents": "boolFromQuery Js Json t bool ", "rendered": "<h4 class='item'>let boolFromQuery: Js.Json.t => bool</h4>", "breadcrumb": "DecodeExt"},
{"href": "./api/DecodeExt.html#value-first", "title": "first", "contents": "first Json Decode decoder Js Json t  ", "rendered": "<h4 class='item'>let first: (Json.Decode.decoder('a), Js.Json.t) => 'a</h4>", "breadcrumb": "DecodeExt"},
{"href": "./api/DecodeExt.html", "title": "DecodeExt", "contents": "@rest", "rendered": "@rest", "breadcrumb": "DecodeExt"},
{"href": "./api/DecodeExt.html", "title": "DecodeExt", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "DecodeExt"},
{"href": "./api/DecodeExt.html#DecodeExt", "title": "DecodeExt", "contents": "", "rendered": "", "breadcrumb": "DecodeExt"},
{"href": "./api/DateExt.html#value-isBefore", "title": "isBefore", "contents": "isBefore Js Date t Js Date t bool  ", "rendered": "<h4 class='item'>let isBefore: (Js.Date.t, Js.Date.t) => bool</h4>", "breadcrumb": "DateExt"},
{"href": "./api/DateExt.html", "title": "DateExt", "contents": "@rest", "rendered": "@rest", "breadcrumb": "DateExt"},
{"href": "./api/DateExt.html", "title": "DateExt", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "DateExt"},
{"href": "./api/DateExt.html#DateExt", "title": "DateExt", "contents": "", "rendered": "", "breadcrumb": "DateExt"},
{"href": "./api/DB.html#value-performRaw", "title": "performRaw", "contents": "performRaw option string pomWithError Js Json t Js Promise error values ", "rendered": "<h4 class='item'>let performRaw: (\n  ~?values: option(\n    [ `Eight of 'k1 * 'l1 * 'm1 * 'n1 * 'o1 * 'p1 * 'q1 * 'r1\n| `Five of 'k1 * 'l1 * 'm1 * 'n1 * 'o1\n| `Four of 'k1 * 'l1 * 'm1 * 'n1\n| `Nine of 'k1 * 'l1 * 'm1 * 'n1 * 'o1 * 'p1 * 'q1 * 'r1 * 's1\n| `One of 'k1\n| `Seven of 'k1 * 'l1 * 'm1 * 'n1 * 'o1 * 'p1 * 'q1\n| `Six of 'k1 * 'l1 * 'm1 * 'n1 * 'o1 * 'p1\n| `Three of 'k1 * 'l1 * 'm1\n| `Two of 'k1 * 'l1 ]\n  ),\n  string\n) => <a href=\"./api/Pom.html#type-pomWithError\" title=\"Pom.pomWithError\">pomWithError</a>(Js.Json.t, Js.Promise.error)</h4>", "breadcrumb": "DB"},
{"href": "./api/DB.html#value-perform", "title": "perform", "contents": "perform builder pomWithError Js Json t Js Promise error ", "rendered": "<h4 class='item'>let perform: <a href=\"./api/Bricks.html#type-builder\" title=\"Bricks.builder\">builder</a> => <a href=\"./api/Pom.html#type-pomWithError\" title=\"Pom.pomWithError\">pomWithError</a>(\n  Js.Json.t,\n  Js.Promise.error\n)</h4>", "breadcrumb": "DB"},
{"href": "./api/DB.html#value-getPool", "title": "getPool", "contents": "getPool unit pool ", "rendered": "<h4 class='item'>let getPool: unit => <a href=\"./api/Pg.html#type-pool\" title=\"Pg.pool\">pool</a></h4>", "breadcrumb": "DB"},
{"href": "./api/DB.html#value-connect", "title": "connect", "contents": "connect string unit ", "rendered": "<h4 class='item'>let connect: string => unit</h4>", "breadcrumb": "DB"},
{"href": "./api/DB.html#value-pool", "title": "pool", "contents": "pool Pervasives ref option pool", "rendered": "<h4 class='item'>let pool: Pervasives.ref(option(<a href=\"./api/Pg.html#type-pool\" title=\"Pg.pool\">pool</a>))</h4>", "breadcrumb": "DB"},
{"href": "./api/DB.html#value-Abstract.performRaw", "title": "Abstract.performRaw", "contents": "performRaw pool option string pomWithError Js Json t Js Promise error  values ", "rendered": "<h4 class='item'>let performRaw: (\n  <a href=\"./api/Pg.html#type-pool\" title=\"Pg.pool\">pool</a>,\n  ~?values: option(\n    [ `Eight of 'b1 * 'c1 * 'd1 * 'e1 * 'f1 * 'g1 * 'h1 * 'i1\n| `Five of 'b1 * 'c1 * 'd1 * 'e1 * 'f1\n| `Four of 'b1 * 'c1 * 'd1 * 'e1\n| `Nine of 'b1 * 'c1 * 'd1 * 'e1 * 'f1 * 'g1 * 'h1 * 'i1 * 'j1\n| `One of 'b1\n| `Seven of 'b1 * 'c1 * 'd1 * 'e1 * 'f1 * 'g1 * 'h1\n| `Six of 'b1 * 'c1 * 'd1 * 'e1 * 'f1 * 'g1\n| `Three of 'b1 * 'c1 * 'd1\n| `Two of 'b1 * 'c1 ]\n  ),\n  string\n) => <a href=\"./api/Pom.html#type-pomWithError\" title=\"Pom.pomWithError\">pomWithError</a>(Js.Json.t, Js.Promise.error)</h4>", "breadcrumb": "DB"},
{"href": "./api/DB.html#value-Abstract.perform", "title": "Abstract.perform", "contents": "perform pool builder pomWithError Js Json t Js Promise error  ", "rendered": "<h4 class='item'>let perform: (<a href=\"./api/Pg.html#type-pool\" title=\"Pg.pool\">pool</a>, <a href=\"./api/Bricks.html#type-builder\" title=\"Bricks.builder\">builder</a>) => <a href=\"./api/Pom.html#type-pomWithError\" title=\"Pom.pomWithError\">pomWithError</a>(\n  Js.Json.t,\n  Js.Promise.error\n)</h4>", "breadcrumb": "DB"},
{"href": "./api/DB.html#module-Abstract", "title": "Abstract", "contents": "@rest", "rendered": "@rest", "breadcrumb": "DB"},
{"href": "./api/DB.html#module-Abstract", "title": "Abstract", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "DB"},
{"href": "./api/DB.html", "title": "DB", "contents": "@rest", "rendered": "@rest", "breadcrumb": "DB"},
{"href": "./api/DB.html", "title": "DB", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "DB"},
{"href": "./api/DB.html#DB", "title": "DB", "contents": "", "rendered": "", "breadcrumb": "DB"},
{"href": "./api/Cuid.html#value-generate", "title": "generate", "contents": "generate unit string ", "rendered": "<h4 class='item'>let generate: unit => string</h4>", "breadcrumb": "Cuid"},
{"href": "./api/Cuid.html", "title": "Cuid", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Cuid"},
{"href": "./api/Cuid.html", "title": "Cuid", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Cuid"},
{"href": "./api/Cuid.html#Cuid", "title": "Cuid", "contents": "", "rendered": "", "breadcrumb": "Cuid"},
{"href": "./api/ConfigTools.html#value-port", "title": "port", "contents": "port int", "rendered": "<h4 class='item'>let port: int</h4>", "breadcrumb": "ConfigTools"},
{"href": "./api/ConfigTools.html#value-logLevel", "title": "logLevel", "contents": "logLevel string", "rendered": "<h4 class='item'>let logLevel: string</h4>", "breadcrumb": "ConfigTools"},
{"href": "./api/ConfigTools.html#value-isDev", "title": "isDev", "contents": "isDev bool", "rendered": "<h4 class='item'>let isDev: bool</h4>", "breadcrumb": "ConfigTools"},
{"href": "./api/ConfigTools.html#value-isProduction", "title": "isProduction", "contents": "isProduction bool", "rendered": "<h4 class='item'>let isProduction: bool</h4>", "breadcrumb": "ConfigTools"},
{"href": "./api/ConfigTools.html#value-envName", "title": "envName", "contents": "envName string", "rendered": "<h4 class='item'>let envName: string</h4>", "breadcrumb": "ConfigTools"},
{"href": "./api/ConfigTools.html#value-fromEnv", "title": "fromEnv", "contents": "fromEnv string string string  ", "rendered": "<h4 class='item'>let fromEnv: (string, string) => string</h4>", "breadcrumb": "ConfigTools"},
{"href": "./api/ConfigTools.html", "title": "ConfigTools", "contents": "@rest", "rendered": "@rest", "breadcrumb": "ConfigTools"},
{"href": "./api/ConfigTools.html", "title": "ConfigTools", "contents": "We&#39;ve also provided a few built-in values that are generally needed\nin server development.", "rendered": "We&#39;ve also provided a few built-in values that are generally needed\nin server development.", "breadcrumb": "ConfigTools"},
{"href": "./api/ConfigTools.html", "title": "ConfigTools", "contents": "We&#39;ve provided fromEnv as a tool to easily fetch a string from\nthe environment, and use a fallback value if the string isn&#39;t set.", "rendered": "We&#39;ve provided <code>fromEnv</code> as a tool to easily fetch a string from\nthe environment, and use a fallback value if the string isn&#39;t set.", "breadcrumb": "ConfigTools"},
{"href": "./api/ConfigTools.html", "title": "ConfigTools", "contents": "We&#39;ve found that a useful convention is to have a module named\n&quot;Config.re&quot;, where all values settable by ENV vars are collected\ninto one place.", "rendered": "We&#39;ve found that a useful convention is to have a module named\n&quot;Config.re&quot;, where all values settable by ENV vars are collected\ninto one place.", "breadcrumb": "ConfigTools"},
{"href": "./api/ConfigTools.html#ConfigTools", "title": "ConfigTools", "contents": "", "rendered": "", "breadcrumb": "ConfigTools"},
{"href": "./api/Bricks.html#value-toString", "title": "toString", "contents": "toString builder string ", "rendered": "<h4 class='item'>let toString: <a href=\"./api/Bricks.html#type-builder\">builder</a> => string</h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-toPayload", "title": "toPayload", "contents": "toPayload builder queryPayload ", "rendered": "<h4 class='item'>let toPayload: <a href=\"./api/Bricks.html#type-builder\">builder</a> => <a href=\"./api/Pg.html#type-queryPayload\" title=\"Pg.queryPayload\">queryPayload</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-returning", "title": "returning", "contents": "returning builder string builder  ", "rendered": "<h4 class='item'>let returning: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-doUpdateOne", "title": "doUpdateOne", "contents": "doUpdateOne onConflictBuilder string builder  ", "rendered": "<h4 class='item'>let doUpdateOne: (<a href=\"./api/Bricks.html#type-onConflictBuilder\">onConflictBuilder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-doNothing", "title": "doNothing", "contents": "doNothing onConflictBuilder builder ", "rendered": "<h4 class='item'>let doNothing: <a href=\"./api/Bricks.html#type-onConflictBuilder\">onConflictBuilder</a> => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-doUpdate", "title": "doUpdate", "contents": "doUpdate onConflictBuilder builder ", "rendered": "<h4 class='item'>let doUpdate: <a href=\"./api/Bricks.html#type-onConflictBuilder\">onConflictBuilder</a> => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-onConflict", "title": "onConflict", "contents": "onConflict builder string onConflictBuilder  ", "rendered": "<h4 class='item'>let onConflict: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-onConflictBuilder\">onConflictBuilder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-onConflict2", "title": "onConflict2", "contents": "onConflict2 builder string string onConflictBuilder   ", "rendered": "<h4 class='item'>let onConflict2: (\n  <a href=\"./api/Bricks.html#type-builder\">builder</a>,\n  string,\n  string\n) => <a href=\"./api/Bricks.html#type-onConflictBuilder\">onConflictBuilder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#type-onConflictBuilder", "title": "onConflictBuilder", "contents": "onConflictBuilder ", "rendered": "<h4 class='item'>type onConflictBuilder</h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-whereOpt", "title": "whereOpt", "contents": "whereOpt builder option whereExpr builder  ", "rendered": "<h4 class='item'>let whereOpt: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, option(<a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a>)) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-set", "title": "set", "contents": "set builder string builder  column ", "rendered": "<h4 class='item'>let set: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, ~column: string, 'a) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-forUpdate", "title": "forUpdate", "contents": "forUpdate builder unit builder  ", "rendered": "<h4 class='item'>let forUpdate: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, unit) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-orderBy", "title": "orderBy", "contents": "orderBy builder array string builder  ", "rendered": "<h4 class='item'>let orderBy: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, array(string)) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-orderByOne", "title": "orderByOne", "contents": "orderByOne builder string builder  ", "rendered": "<h4 class='item'>let orderByOne: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-having", "title": "having", "contents": "having builder string builder  column ", "rendered": "<h4 class='item'>let having: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, ~column: string, 'a) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-groupBy", "title": "groupBy", "contents": "groupBy builder array string builder  ", "rendered": "<h4 class='item'>let groupBy: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, array(string)) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-groupByOne", "title": "groupByOne", "contents": "groupByOne builder string builder  ", "rendered": "<h4 class='item'>let groupByOne: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-where", "title": "where", "contents": "where builder whereExpr builder  ", "rendered": "<h4 class='item'>let where: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a>) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-whereAll", "title": "whereAll", "contents": "whereAll builder Js t builder  ", "rendered": "<h4 class='item'>let whereAll: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, Js.t('a)) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-whereEq", "title": "whereEq", "contents": "whereEq builder string string builder   ", "rendered": "<h4 class='item'>let whereEq: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-on", "title": "on", "contents": "on builder Js t builder  ", "rendered": "<h4 class='item'>let on: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, Js.t('a)) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-crossJoin", "title": "crossJoin", "contents": "crossJoin builder string builder  ", "rendered": "<h4 class='item'>let crossJoin: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-fullJoin", "title": "fullJoin", "contents": "fullJoin builder string builder  ", "rendered": "<h4 class='item'>let fullJoin: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-rightJoin", "title": "rightJoin", "contents": "rightJoin builder string builder  ", "rendered": "<h4 class='item'>let rightJoin: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-leftJoin", "title": "leftJoin", "contents": "leftJoin builder string builder  ", "rendered": "<h4 class='item'>let leftJoin: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-join", "title": "join", "contents": "join builder string builder  ", "rendered": "<h4 class='item'>let join: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-from", "title": "from", "contents": "from builder string builder  ", "rendered": "<h4 class='item'>let from: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-intoTemp", "title": "intoTemp", "contents": "intoTemp builder string builder  ", "rendered": "<h4 class='item'>let intoTemp: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-into", "title": "into", "contents": "into builder string builder  ", "rendered": "<h4 class='item'>let into: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-limit", "title": "limit", "contents": "limit builder int builder  ", "rendered": "<h4 class='item'>let limit: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, int) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-offset", "title": "offset", "contents": "offset builder int builder  ", "rendered": "<h4 class='item'>let offset: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, int) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-andSelect", "title": "andSelect", "contents": "andSelect builder string builder  ", "rendered": "<h4 class='item'>let andSelect: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-distinct", "title": "distinct", "contents": "distinct builder array string builder  cols", "rendered": "<h4 class='item'>let distinct: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, ~cols: array(string)) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-select", "title": "select", "contents": "select string builder ", "rendered": "<h4 class='item'>let select: string => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-delete", "title": "delete", "contents": "delete unit builder ", "rendered": "<h4 class='item'>let delete: unit => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-updateJson", "title": "updateJson", "contents": "updateJson string Js Json t builder table ", "rendered": "<h4 class='item'>let updateJson: (~table: string, Js.Json.t) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-update", "title": "update", "contents": "update string Js t builder table ", "rendered": "<h4 class='item'>let update: (~table: string, Js.t('a)) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-jsonValues", "title": "jsonValues", "contents": "jsonValues insertBuilder array Js Json t builder  ", "rendered": "<h4 class='item'>let jsonValues: (<a href=\"./api/Bricks.html#type-insertBuilder\">insertBuilder</a>, array(Js.Json.t)) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-jsonValue", "title": "jsonValue", "contents": "jsonValue insertBuilder Js Json t builder  ", "rendered": "<h4 class='item'>let jsonValue: (<a href=\"./api/Bricks.html#type-insertBuilder\">insertBuilder</a>, Js.Json.t) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-valueJson", "title": "valueJson", "contents": "valueJson insertBuilder Js Json t builder  ", "rendered": "<h4 class='item'>let valueJson: (<a href=\"./api/Bricks.html#type-insertBuilder\">insertBuilder</a>, Js.Json.t) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-value", "title": "value", "contents": "value insertBuilder Js t builder  ", "rendered": "<h4 class='item'>let value: (<a href=\"./api/Bricks.html#type-insertBuilder\">insertBuilder</a>, Js.t('a)) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-valuesJson", "title": "valuesJson", "contents": "valuesJson insertBuilder array Js Json t builder  ", "rendered": "<h4 class='item'>let valuesJson: (<a href=\"./api/Bricks.html#type-insertBuilder\">insertBuilder</a>, array(Js.Json.t)) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-values", "title": "values", "contents": "values insertBuilder array Js t builder  ", "rendered": "<h4 class='item'>let values: (<a href=\"./api/Bricks.html#type-insertBuilder\">insertBuilder</a>, array(Js.t('a))) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-insertInto", "title": "insertInto", "contents": "insertInto string insertBuilder ", "rendered": "<h4 class='item'>let insertInto: string => <a href=\"./api/Bricks.html#type-insertBuilder\">insertBuilder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#type-insertBuilder", "title": "insertBuilder", "contents": "insertBuilder ", "rendered": "<h4 class='item'>type insertBuilder</h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-isNot", "title": "isNot", "contents": "isNot whereExpr whereExpr ", "rendered": "<h4 class='item'>let isNot: <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a> => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-in_", "title": "in_", "contents": "in_ string array whereExpr col ", "rendered": "<h4 class='item'>let in_: (~col: string, array('a)) => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-exists", "title": "exists", "contents": "exists builder whereExpr subquery", "rendered": "<h4 class='item'>let exists: (~subquery: <a href=\"./api/Bricks.html#type-builder\">builder</a>) => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-like", "title": "like", "contents": "like string string whereExpr col ", "rendered": "<h4 class='item'>let like: (~col: string, string) => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-isNotNull", "title": "isNotNull", "contents": "isNotNull string whereExpr ", "rendered": "<h4 class='item'>let isNotNull: string => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-isNull", "title": "isNull", "contents": "isNull string whereExpr ", "rendered": "<h4 class='item'>let isNull: string => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-between", "title": "between", "contents": "between string whereExpr col bottom top", "rendered": "<h4 class='item'>let between: (\n  ~col: string,\n  ~bottom: 'a,\n  ~top: 'a\n) => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-gte", "title": "gte", "contents": "gte string whereExpr col ", "rendered": "<h4 class='item'>let gte: (~col: string, 'a) => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-gt", "title": "gt", "contents": "gt string whereExpr col ", "rendered": "<h4 class='item'>let gt: (~col: string, 'a) => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-lte", "title": "lte", "contents": "lte string whereExpr col ", "rendered": "<h4 class='item'>let lte: (~col: string, 'a) => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-lt", "title": "lt", "contents": "lt string whereExpr col ", "rendered": "<h4 class='item'>let lt: (~col: string, 'a) => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-notEq", "title": "notEq", "contents": "notEq string whereExpr col ", "rendered": "<h4 class='item'>let notEq: (~col: string, 'a) => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-eq", "title": "eq", "contents": "eq string whereExpr col ", "rendered": "<h4 class='item'>let eq: (~col: string, 'a) => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-not", "title": "not", "contents": "not whereExpr whereExpr ", "rendered": "<h4 class='item'>let not: <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a> => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-or_", "title": "or_", "contents": "or_ array whereExpr whereExpr ", "rendered": "<h4 class='item'>let or_: array(<a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a>) => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-and_", "title": "and_", "contents": "and_ array whereExpr whereExpr ", "rendered": "<h4 class='item'>let and_: array(<a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a>) => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#type-whereExpr", "title": "whereExpr", "contents": "whereExpr ", "rendered": "<h4 class='item'>type whereExpr</h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-sqlWithValues", "title": "sqlWithValues", "contents": "sqlWithValues string fragment text values", "rendered": "<h4 class='item'>let sqlWithValues: (\n  ~text: string,\n  ~values: [ `Eight of 'a0 * 'b0 * 'c0 * 'd0 * 'e0 * 'f0 * 'g0 * 'h0\n| `Five of 'a0 * 'b0 * 'c0 * 'd0 * 'e0\n| `Four of 'a0 * 'b0 * 'c0 * 'd0\n| `Nine of 'a0 * 'b0 * 'c0 * 'd0 * 'e0 * 'f0 * 'g0 * 'h0 * 'i0\n| `One of 'a0\n| `Seven of 'a0 * 'b0 * 'c0 * 'd0 * 'e0 * 'f0 * 'g0\n| `Six of 'a0 * 'b0 * 'c0 * 'd0 * 'e0 * 'f0\n| `Three of 'a0 * 'b0 * 'c0\n| `Two of 'a0 * 'b0 ]\n) => <a href=\"./api/Bricks.html#type-fragment\">fragment</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-sql", "title": "sql", "contents": "sql string fragment ", "rendered": "<h4 class='item'>let sql: string => <a href=\"./api/Bricks.html#type-fragment\">fragment</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-omitByJson", "title": "omitByJson", "contents": "omitByJson Js Json t bool  Js Json t  ", "rendered": "<h4 class='item'>let omitByJson: (Js.Json.t, 'b => bool) => Js.Json.t</h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-omitBy", "title": "omitBy", "contents": "omitBy Js t bool  Js t  ", "rendered": "<h4 class='item'>let omitBy: (Js.t('a), 'b => bool) => Js.t('c)</h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#type-fragment", "title": "fragment", "contents": "fragment Js t", "rendered": "<h4 class='item'>type fragment = Js.t(\n  &lt; str : string; vals : Pg.values &gt;\n)</h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#type-builder", "title": "builder", "contents": "builder ", "rendered": "<h4 class='item'>type builder</h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html", "title": "Bricks", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html", "title": "Bricks", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#Bricks", "title": "Bricks", "contents": "", "rendered": "", "breadcrumb": "Bricks"},
{"href": "./api/Request.html#value-finishBinary", "title": "finishBinary", "contents": "finishBinary request pomWithError binaryResponse error ", "rendered": "<h4 class='item'>let finishBinary: <a href=\"./api/Request.html#type-request\">request</a> => <a href=\"./api/Pom.html#type-pomWithError\" title=\"Pom.pomWithError\">pomWithError</a>(\n  <a href=\"./api/Request.html#type-binaryResponse\">binaryResponse</a>,\n  <a href=\"./api/Request.html#type-error\">error</a>\n)</h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-finish", "title": "finish", "contents": "finish request pomWithError response error ", "rendered": "<h4 class='item'>let finish: <a href=\"./api/Request.html#type-request\">request</a> => <a href=\"./api/Pom.html#type-pomWithError\" title=\"Pom.pomWithError\">pomWithError</a>(<a href=\"./api/Request.html#type-response\">response</a>, <a href=\"./api/Request.html#type-error\">error</a>)</h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-toPromiseExpectBinary", "title": "toPromiseExpectBinary", "contents": "toPromiseExpectBinary request pomWithError binaryResponse error ", "rendered": "<h4 class='item'>let toPromiseExpectBinary: <a href=\"./api/Request.html#type-request\">request</a> => <a href=\"./api/Pom.html#type-pomWithError\" title=\"Pom.pomWithError\">pomWithError</a>(\n  <a href=\"./api/Request.html#type-binaryResponse\">binaryResponse</a>,\n  <a href=\"./api/Request.html#type-error\">error</a>\n)</h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-toPromise", "title": "toPromise", "contents": "toPromise request pomWithError response error ", "rendered": "<h4 class='item'>let toPromise: <a href=\"./api/Request.html#type-request\">request</a> => <a href=\"./api/Pom.html#type-pomWithError\" title=\"Pom.pomWithError\">pomWithError</a>(<a href=\"./api/Request.html#type-response\">response</a>, <a href=\"./api/Request.html#type-error\">error</a>)</h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-timeout", "title": "timeout", "contents": "timeout request Js t request  ", "rendered": "<h4 class='item'>let timeout: (\n  <a href=\"./api/Request.html#type-request\">request</a>,\n  Js.t(\n    &lt; deadline : int option; response : int option &gt;\n  )\n) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-auth", "title": "auth", "contents": "auth request string string request  username password", "rendered": "<h4 class='item'>let auth: (\n  <a href=\"./api/Request.html#type-request\">request</a>,\n  ~username: string,\n  ~password: string\n) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-ok", "title": "ok", "contents": "ok request response bool  request  ", "rendered": "<h4 class='item'>let ok: (<a href=\"./api/Request.html#type-request\">request</a>, <a href=\"./api/Request.html#type-response\">response</a> => bool) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-set", "title": "set", "contents": "set request string string request   ", "rendered": "<h4 class='item'>let set: (<a href=\"./api/Request.html#type-request\">request</a>, string, string) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-attachJsonAsFile", "title": "attachJsonAsFile", "contents": "attachJsonAsFile request string Js Json t request   ", "rendered": "<h4 class='item'>let attachJsonAsFile: (\n  <a href=\"./api/Request.html#type-request\">request</a>,\n  string,\n  Js.Json.t\n) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-attachBuffer", "title": "attachBuffer", "contents": "attachBuffer request string Node buffer string request    ", "rendered": "<h4 class='item'>let attachBuffer: (\n  <a href=\"./api/Request.html#type-request\">request</a>,\n  string,\n  Node.buffer,\n  string\n) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-stringField", "title": "stringField", "contents": "stringField request string string request   ", "rendered": "<h4 class='item'>let stringField: (<a href=\"./api/Request.html#type-request\">request</a>, string, string) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-sendBuffer", "title": "sendBuffer", "contents": "sendBuffer request Node Buffer t request  ", "rendered": "<h4 class='item'>let sendBuffer: (<a href=\"./api/Request.html#type-request\">request</a>, Node.Buffer.t) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-retry", "title": "retry", "contents": "retry request int request  ", "rendered": "<h4 class='item'>let retry: (<a href=\"./api/Request.html#type-request\">request</a>, int) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-delete", "title": "delete", "contents": "delete string request ", "rendered": "<h4 class='item'>let delete: string => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-putBuffer", "title": "putBuffer", "contents": "putBuffer string Node Buffer t request  ", "rendered": "<h4 class='item'>let putBuffer: (string, Node.Buffer.t) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-putJson", "title": "putJson", "contents": "putJson string Js Json t request  ", "rendered": "<h4 class='item'>let putJson: (string, Js.Json.t) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-put", "title": "put", "contents": "put string request ", "rendered": "<h4 class='item'>let put: string => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-postBuffer", "title": "postBuffer", "contents": "postBuffer string Node Buffer t request  ", "rendered": "<h4 class='item'>let postBuffer: (string, Node.Buffer.t) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-postJson", "title": "postJson", "contents": "postJson string Js Json t request  ", "rendered": "<h4 class='item'>let postJson: (string, Js.Json.t) => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-post", "title": "post", "contents": "post string request ", "rendered": "<h4 class='item'>let post: string => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#value-get", "title": "get", "contents": "get string request ", "rendered": "<h4 class='item'>let get: string => <a href=\"./api/Request.html#type-request\">request</a></h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#type-error", "title": "error", "contents": "error status option int message string", "rendered": "<h4 class='item'>type error = {status: option(int), message: string}</h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#type-rawError", "title": "rawError", "contents": "rawError Js t", "rendered": "<h4 class='item'>type rawError = Js.t(\n  &lt; message : string; status : int option &gt;\n)</h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#type-binaryResponse", "title": "binaryResponse", "contents": "binaryResponse Js t", "rendered": "<h4 class='item'>type binaryResponse = Js.t(\n  &lt; body : Node.Buffer.t; headers : string Js.Dict.t; status : int;\n  text : string &gt;\n)</h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#type-response", "title": "response", "contents": "response Js t", "rendered": "<h4 class='item'>type response = Js.t(\n  &lt; body : Js.Json.t; headers : string Js.Dict.t; status : int &gt;\n)</h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html#type-request", "title": "request", "contents": "request ", "rendered": "<h4 class='item'>type request</h4>", "breadcrumb": "Request"},
{"href": "./api/Request.html", "title": "Request", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Request"},
{"href": "./api/Request.html", "title": "Request", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Request"},
{"href": "./api/Request.html#Request", "title": "Request", "contents": "", "rendered": "", "breadcrumb": "Request"},
{"href": "./api/Postgrator.html#value-migrate", "title": "migrate", "contents": "migrate string Js Promise t unit ", "rendered": "<h4 class='item'>let migrate: string => Js.Promise.t(unit)</h4>", "breadcrumb": "Postgrator"},
{"href": "./api/Postgrator.html#type-appliedMigration", "title": "appliedMigration", "contents": "appliedMigration ", "rendered": "<h4 class='item'>type appliedMigration</h4>", "breadcrumb": "Postgrator"},
{"href": "./api/Postgrator.html#value-make", "title": "make", "contents": "make Js t t ", "rendered": "<h4 class='item'>let make: Js.t(\n  &lt; connectionString : string; driver : string; migrationDirectory : string;\n  schemaTable : string &gt;\n) => <a href=\"./api/Postgrator.html#type-t\">t</a></h4>", "breadcrumb": "Postgrator"},
{"href": "./api/Postgrator.html#type-t", "title": "t", "contents": "t ", "rendered": "<h4 class='item'>type t</h4>", "breadcrumb": "Postgrator"},
{"href": "./api/Postgrator.html", "title": "Postgrator", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Postgrator"},
{"href": "./api/Postgrator.html", "title": "Postgrator", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Postgrator"},
{"href": "./api/Postgrator.html#Postgrator", "title": "Postgrator", "contents": "", "rendered": "", "breadcrumb": "Postgrator"},
{"href": "./api/Pom.html#value-let_", "title": "let_", "contents": "let_ pomWithError pomWithError  pomWithError  ", "rendered": "<h4 class='item'>let let_: (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('a, 'b),\n  'a => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('c, 'b)\n) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('c, 'b)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-toJsPromise", "title": "toJsPromise", "contents": "toJsPromise pom Js Promise t ", "rendered": "<h4 class='item'>let toJsPromise: <a href=\"./api/Pom.html#type-pom\">pom</a>('a) => Js.Promise.t('a)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-fromJsPromise", "title": "fromJsPromise", "contents": "fromJsPromise Js Promise t pomWithError Js Promise error ", "rendered": "<h4 class='item'>let fromJsPromise: Js.Promise.t('a) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>(\n  'a,\n  Js.Promise.error\n)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-allArray", "title": "allArray", "contents": "allArray array pom pom array ", "rendered": "<h4 class='item'>let allArray: array(<a href=\"./api/Pom.html#type-pom\">pom</a>('a)) => <a href=\"./api/Pom.html#type-pom\">pom</a>(array('a))</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-all", "title": "all", "contents": "all list pom pom list ", "rendered": "<h4 class='item'>let all: list(<a href=\"./api/Pom.html#type-pom\">pom</a>('a)) => <a href=\"./api/Pom.html#type-pom\">pom</a>(list('a))</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-!>=", "title": "!>=", "contents": "!>= pomWithError pomWithError  pomWithError  ", "rendered": "<h4 class='item'>let !>=: (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err),\n  'err => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err)\n) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-flatMapFromError", "title": "flatMapFromError", "contents": "flatMapFromError pomWithError pomWithError  pomWithError  ", "rendered": "<h4 class='item'>let flatMapFromError: (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err),\n  'err => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err)\n) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-mergeErr", "title": "mergeErr", "contents": "mergeErr pomWithError pom ", "rendered": "<h4 class='item'>let mergeErr: <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('a, 'a) => <a href=\"./api/Pom.html#type-pom\">pom</a>('a)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-recover", "title": "recover", "contents": "recover pomWithError  pom  ", "rendered": "<h4 class='item'>let recover: (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err),\n  'err => 'data\n) => <a href=\"./api/Pom.html#type-pom\">pom</a>('data)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-<!>", "title": "<!>", "contents": "<!> pomWithError  pomWithError  ", "rendered": "<h4 class='item'>let <!>: (<a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('a, 'b), 'b => 'c) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>(\n  'a,\n  'c\n)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-mapErr", "title": "mapErr", "contents": "mapErr pomWithError  pomWithError  ", "rendered": "<h4 class='item'>let mapErr: (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err),\n  'err => 'err2\n) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err2)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value->->", "title": ">->", "contents": ">-> pomWithError unit  pomWithError  ", "rendered": "<h4 class='item'>let >->: (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err),\n  'data => unit\n) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-tap", "title": "tap", "contents": "tap pomWithError unit  pomWithError  ", "rendered": "<h4 class='item'>let tap: (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err),\n  'data => unit\n) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-<?>", "title": "<?>", "contents": "<?> pomWithError Belt Result t  pomWithError  ", "rendered": "<h4 class='item'>let <?>: (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('a, 'err),\n  'a => Belt.Result.t('b, 'err)\n) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('b, 'err)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-try_", "title": "try_", "contents": "try_ pomWithError Belt Result t  pomWithError  ", "rendered": "<h4 class='item'>let try_: (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('a, 'err),\n  'a => Belt.Result.t('b, 'err)\n) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('b, 'err)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-wait", "title": "wait", "contents": "wait pomWithError Belt Result t unit  pom unit  ", "rendered": "<h4 class='item'>let wait: (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err),\n  Belt.Result.t('data, 'err) => unit\n) => <a href=\"./api/Pom.html#type-pom\">pom</a>(unit)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value->>=", "title": ">>=", "contents": ">>= pomWithError pomWithError  pomWithError  ", "rendered": "<h4 class='item'>let >>=: (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('a, 'b),\n  'a => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('c, 'b)\n) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('c, 'b)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-flatMap", "title": "flatMap", "contents": "flatMap pomWithError pomWithError  pomWithError  ", "rendered": "<h4 class='item'>let flatMap: (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('a, 'err),\n  'a => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('b, 'err)\n) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('b, 'err)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-<$>", "title": "<$>", "contents": "<$> pomWithError  pomWithError  ", "rendered": "<h4 class='item'>let <$>: (<a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('a, 'b), 'a => 'c) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>(\n  'c,\n  'b\n)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-map", "title": "map", "contents": "map pomWithError  pomWithError  ", "rendered": "<h4 class='item'>let map: (<a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('a, 'err), 'a => 'b) => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>(\n  'b,\n  'err\n)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-rejected", "title": "rejected", "contents": "rejected pomWithError ", "rendered": "<h4 class='item'>let rejected: 'a => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('b, 'a)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-resolved", "title": "resolved", "contents": "resolved pomWithError ", "rendered": "<h4 class='item'>let resolved: 'a => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('a, 'b)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-fromCallback", "title": "fromCallback", "contents": "fromCallback nodeCallback unit  pomWithError ", "rendered": "<h4 class='item'>let fromCallback: <a href=\"./api/Pom.html#type-nodeCallback\">nodeCallback</a>(\n  'err,\n  'data\n) => unit => <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, 'err)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#type-nodeCallback", "title": "nodeCallback", "contents": "nodeCallback unit  ", "rendered": "<h4 class='item'>type nodeCallback('err, 'data) = ('err, 'data) => unit</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#value-make", "title": "make", "contents": "make unit pomWithError unit  unit  ", "rendered": "<h4 class='item'>let make: unit => (\n  <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('a, 'b),\n  'a => unit,\n  'b => unit\n)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#type-pom", "title": "pom", "contents": "pom pomWithError unit", "rendered": "<h4 class='item'>type pom('data) = <a href=\"./api/Pom.html#type-pomWithError\">pomWithError</a>('data, unit)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#type-pomWithError", "title": "pomWithError", "contents": "pomWithError ", "rendered": "<h4 class='item'>type pomWithError('data, 'err)</h4>", "breadcrumb": "Pom"},
{"href": "./api/Pom.html", "title": "Pom", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Pom"},
{"href": "./api/Pom.html", "title": "Pom", "contents": "Hopefully more docs later!", "rendered": "Hopefully more docs later!", "breadcrumb": "Pom"},
{"href": "./api/Pom.html", "title": "Pom", "contents": "Poms are richer alternatives to promises that make error handling\nrequired and explicit. They aren&#39;t much more than the combination\nof JS promises and Reason Results. The value lies in the functions\nprovided for easy control flow.", "rendered": "Poms are richer alternatives to promises that make error handling\nrequired and explicit. They aren&#39;t much more than the combination\nof JS promises and Reason Results. The value lies in the functions\nprovided for easy control flow.", "breadcrumb": "Pom"},
{"href": "./api/Pom.html#Pom", "title": "Pom", "contents": "", "rendered": "", "breadcrumb": "Pom"},
{"href": "./api/Pg.html#value-poolStats", "title": "poolStats", "contents": "poolStats pool string ", "rendered": "<h4 class='item'>let poolStats: <a href=\"./api/Pg.html#type-pool\">pool</a> => string</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#value-onRemove", "title": "onRemove", "contents": "onRemove pool client unit  unit  ", "rendered": "<h4 class='item'>let onRemove: (<a href=\"./api/Pg.html#type-pool\">pool</a>, <a href=\"./api/Pg.html#type-client\">client</a> => unit) => unit</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#value-onError", "title": "onError", "contents": "onError pool Js Exn t client unit   unit  ", "rendered": "<h4 class='item'>let onError: (<a href=\"./api/Pg.html#type-pool\">pool</a>, (Js.Exn.t, <a href=\"./api/Pg.html#type-client\">client</a>) => unit) => unit</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#value-onAcquire", "title": "onAcquire", "contents": "onAcquire pool client unit  unit  ", "rendered": "<h4 class='item'>let onAcquire: (<a href=\"./api/Pg.html#type-pool\">pool</a>, <a href=\"./api/Pg.html#type-client\">client</a> => unit) => unit</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#value-onConnect", "title": "onConnect", "contents": "onConnect pool client unit  unit  ", "rendered": "<h4 class='item'>let onConnect: (<a href=\"./api/Pg.html#type-pool\">pool</a>, <a href=\"./api/Pg.html#type-client\">client</a> => unit) => unit</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#value-query", "title": "query", "contents": "query pool queryPayload pomWithError dbResult Js Promise error  ", "rendered": "<h4 class='item'>let query: (<a href=\"./api/Pg.html#type-pool\">pool</a>, <a href=\"./api/Pg.html#type-queryPayload\">queryPayload</a>) => <a href=\"./api/Pom.html#type-pomWithError\" title=\"Pom.pomWithError\">pomWithError</a>(\n  <a href=\"./api/Pg.html#type-dbResult\">dbResult</a>,\n  Js.Promise.error\n)</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#value-_query", "title": "_query", "contents": "_query pool queryPayload Js Promise t dbResult  ", "rendered": "<h4 class='item'>let _query: (<a href=\"./api/Pg.html#type-pool\">pool</a>, <a href=\"./api/Pg.html#type-queryPayload\">queryPayload</a>) => Js.Promise.t(<a href=\"./api/Pg.html#type-dbResult\">dbResult</a>)</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#type-queryPayload", "title": "queryPayload", "contents": "queryPayload Js t", "rendered": "<h4 class='item'>type queryPayload = Js.t(\n  &lt; text : string; values : values &gt;\n)</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#type-values", "title": "values", "contents": "values ", "rendered": "<h4 class='item'>type values</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#value-Types.parseDate", "title": "Types.parseDate", "contents": "parseDate Js Date t string ", "rendered": "<h4 class='item'>let parseDate: Js.Date.t => string</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#value-Types.setTypeParserD", "title": "Types.setTypeParserD", "contents": "setTypeParserD t int Js Date t  unit   ", "rendered": "<h4 class='item'>let setTypeParserD: (<a href=\"./api/Pg.html#type-Types.t\">t</a>, int, Js.Date.t => 'a) => unit</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#value-Types.setTypeParser", "title": "Types.setTypeParser", "contents": "setTypeParser t int string  unit   ", "rendered": "<h4 class='item'>let setTypeParser: (<a href=\"./api/Pg.html#type-Types.t\">t</a>, int, string => 'a) => unit</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#value-Types.types", "title": "Types.types", "contents": "types t", "rendered": "<h4 class='item'>let types: <a href=\"./api/Pg.html#type-Types.t\">t</a></h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#value-Types.parseInt", "title": "Types.parseInt", "contents": "parseInt string int ", "rendered": "<h4 class='item'>let parseInt: string => int</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#type-Types.t", "title": "Types.t", "contents": "t ", "rendered": "<h4 class='item'>type t</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#module-Types", "title": "Types", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#module-Types", "title": "Types", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#type-dbResult", "title": "dbResult", "contents": "dbResult Js t", "rendered": "<h4 class='item'>type dbResult = Js.t(&lt; rows : Js.Json.t &gt;)</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#value-makePool", "title": "makePool", "contents": "makePool Js t pool ", "rendered": "<h4 class='item'>let makePool: Js.t(\n  &lt; connectionString : string &gt;\n) => <a href=\"./api/Pg.html#type-pool\">pool</a></h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#type-client", "title": "client", "contents": "client ", "rendered": "<h4 class='item'>type client</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#type-pool", "title": "pool", "contents": "pool Js t", "rendered": "<h4 class='item'>type pool = Js.t(\n  &lt; idleCount : int; totalCount : int; waitingCount : int &gt;\n)</h4>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html", "title": "Pg", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Pg"},
{"href": "./api/Pg.html", "title": "Pg", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Pg"},
{"href": "./api/Pg.html#Pg", "title": "Pg", "contents": "", "rendered": "", "breadcrumb": "Pg"},
{"href": "./api/Log.html#value-error5", "title": "error5", "contents": "error5 unit     ", "rendered": "<h4 class='item'>let error5: ('a, 'a, 'a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-error4", "title": "error4", "contents": "error4 unit    ", "rendered": "<h4 class='item'>let error4: ('a, 'a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-error3", "title": "error3", "contents": "error3 unit   ", "rendered": "<h4 class='item'>let error3: ('a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-error2", "title": "error2", "contents": "error2 unit  ", "rendered": "<h4 class='item'>let error2: ('a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-error", "title": "error", "contents": "error unit ", "rendered": "<h4 class='item'>let error: 'a => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-warn5", "title": "warn5", "contents": "warn5 unit     ", "rendered": "<h4 class='item'>let warn5: ('a, 'a, 'a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-warn4", "title": "warn4", "contents": "warn4 unit    ", "rendered": "<h4 class='item'>let warn4: ('a, 'a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-warn3", "title": "warn3", "contents": "warn3 unit   ", "rendered": "<h4 class='item'>let warn3: ('a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-warn2", "title": "warn2", "contents": "warn2 unit  ", "rendered": "<h4 class='item'>let warn2: ('a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-warn", "title": "warn", "contents": "warn unit ", "rendered": "<h4 class='item'>let warn: 'a => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-info5", "title": "info5", "contents": "info5 unit     ", "rendered": "<h4 class='item'>let info5: ('a, 'a, 'a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-info4", "title": "info4", "contents": "info4 unit    ", "rendered": "<h4 class='item'>let info4: ('a, 'a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-info3", "title": "info3", "contents": "info3 unit   ", "rendered": "<h4 class='item'>let info3: ('a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-info2", "title": "info2", "contents": "info2 unit  ", "rendered": "<h4 class='item'>let info2: ('a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-info", "title": "info", "contents": "info unit ", "rendered": "<h4 class='item'>let info: 'a => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-debug5", "title": "debug5", "contents": "debug5 unit     ", "rendered": "<h4 class='item'>let debug5: ('a, 'a, 'a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-debug4", "title": "debug4", "contents": "debug4 unit    ", "rendered": "<h4 class='item'>let debug4: ('a, 'a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-debug3", "title": "debug3", "contents": "debug3 unit   ", "rendered": "<h4 class='item'>let debug3: ('a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-debug2", "title": "debug2", "contents": "debug2 unit  ", "rendered": "<h4 class='item'>let debug2: ('a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-debug", "title": "debug", "contents": "debug unit ", "rendered": "<h4 class='item'>let debug: 'a => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-trace5", "title": "trace5", "contents": "trace5 unit     ", "rendered": "<h4 class='item'>let trace5: ('a, 'a, 'a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-trace4", "title": "trace4", "contents": "trace4 unit    ", "rendered": "<h4 class='item'>let trace4: ('a, 'a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-trace3", "title": "trace3", "contents": "trace3 unit   ", "rendered": "<h4 class='item'>let trace3: ('a, 'a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-trace2", "title": "trace2", "contents": "trace2 unit  ", "rendered": "<h4 class='item'>let trace2: ('a, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-trace", "title": "trace", "contents": "trace unit ", "rendered": "<h4 class='item'>let trace: 'a => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-instance", "title": "instance", "contents": "instance Pervasives ref instance", "rendered": "<h4 class='item'>let instance: Pervasives.ref(<a href=\"./api/Log.html#type-Pino.instance\" title=\"Pino.instance\">instance</a>)</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-defaultOpts", "title": "defaultOpts", "contents": "defaultOpts Js t", "rendered": "<h4 class='item'>let defaultOpts: Js.t(\n  &lt; level : string; redact : string array; useLevelLabels : bool &gt;\n)</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.error5", "title": "Pino.error5", "contents": "error5 instance unit      ", "rendered": "<h4 class='item'>let error5: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c, 'd, 'e) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.error4", "title": "Pino.error4", "contents": "error4 instance unit     ", "rendered": "<h4 class='item'>let error4: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c, 'd) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.error3", "title": "Pino.error3", "contents": "error3 instance unit    ", "rendered": "<h4 class='item'>let error3: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.error2", "title": "Pino.error2", "contents": "error2 instance unit   ", "rendered": "<h4 class='item'>let error2: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.error", "title": "Pino.error", "contents": "error instance unit  ", "rendered": "<h4 class='item'>let error: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.warn5", "title": "Pino.warn5", "contents": "warn5 instance unit      ", "rendered": "<h4 class='item'>let warn5: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c, 'd, 'e) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.warn4", "title": "Pino.warn4", "contents": "warn4 instance unit     ", "rendered": "<h4 class='item'>let warn4: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c, 'd) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.warn3", "title": "Pino.warn3", "contents": "warn3 instance unit    ", "rendered": "<h4 class='item'>let warn3: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.warn2", "title": "Pino.warn2", "contents": "warn2 instance unit   ", "rendered": "<h4 class='item'>let warn2: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.warn", "title": "Pino.warn", "contents": "warn instance unit  ", "rendered": "<h4 class='item'>let warn: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.info5", "title": "Pino.info5", "contents": "info5 instance unit      ", "rendered": "<h4 class='item'>let info5: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c, 'd, 'e) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.info4", "title": "Pino.info4", "contents": "info4 instance unit     ", "rendered": "<h4 class='item'>let info4: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c, 'd) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.info3", "title": "Pino.info3", "contents": "info3 instance unit    ", "rendered": "<h4 class='item'>let info3: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.info2", "title": "Pino.info2", "contents": "info2 instance unit   ", "rendered": "<h4 class='item'>let info2: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.info", "title": "Pino.info", "contents": "info instance unit  ", "rendered": "<h4 class='item'>let info: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.debug5", "title": "Pino.debug5", "contents": "debug5 instance unit      ", "rendered": "<h4 class='item'>let debug5: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c, 'd, 'e) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.debug4", "title": "Pino.debug4", "contents": "debug4 instance unit     ", "rendered": "<h4 class='item'>let debug4: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c, 'd) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.debug3", "title": "Pino.debug3", "contents": "debug3 instance unit    ", "rendered": "<h4 class='item'>let debug3: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.debug2", "title": "Pino.debug2", "contents": "debug2 instance unit   ", "rendered": "<h4 class='item'>let debug2: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.debug", "title": "Pino.debug", "contents": "debug instance unit  ", "rendered": "<h4 class='item'>let debug: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.trace5", "title": "Pino.trace5", "contents": "trace5 instance unit      ", "rendered": "<h4 class='item'>let trace5: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c, 'd, 'e) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.trace4", "title": "Pino.trace4", "contents": "trace4 instance unit     ", "rendered": "<h4 class='item'>let trace4: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c, 'd) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.trace3", "title": "Pino.trace3", "contents": "trace3 instance unit    ", "rendered": "<h4 class='item'>let trace3: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b, 'c) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.trace2", "title": "Pino.trace2", "contents": "trace2 instance unit   ", "rendered": "<h4 class='item'>let trace2: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a, 'b) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.trace", "title": "Pino.trace", "contents": "trace instance unit  ", "rendered": "<h4 class='item'>let trace: (<a href=\"./api/Log.html#type-Pino.instance\">instance</a>, 'a) => unit</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-Pino.make", "title": "Pino.make", "contents": "make Js t instance ", "rendered": "<h4 class='item'>let make: Js.t('a) => <a href=\"./api/Log.html#type-Pino.instance\">instance</a></h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#module-Pino", "title": "Pino", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Log"},
{"href": "./api/Log.html#type-Pino.instance", "title": "Pino.instance", "contents": "instance ", "rendered": "<h4 class='item'>type instance</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#module-Pino", "title": "Pino", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Log"},
{"href": "./api/Log.html#module-Pino", "title": "Pino", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-SerializeError.go", "title": "SerializeError.go", "contents": "go Js Json t ", "rendered": "<h4 class='item'>let go: 'a => Js.Json.t</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#value-SerializeError.serializeError", "title": "SerializeError.serializeError", "contents": "serializeError Js Json t ", "rendered": "<h4 class='item'>let serializeError: 'a => Js.Json.t</h4>", "breadcrumb": "Log"},
{"href": "./api/Log.html#module-SerializeError", "title": "SerializeError", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Log"},
{"href": "./api/Log.html#module-SerializeError", "title": "SerializeError", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Log"},
{"href": "./api/Log.html", "title": "Log", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Log"},
{"href": "./api/Log.html", "title": "Log", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Log"},
{"href": "./api/Log.html#Log", "title": "Log", "contents": "", "rendered": "", "breadcrumb": "Log"},
{"href": "./api/Hashes.html#value-randomId", "title": "randomId", "contents": "randomId unit string ", "rendered": "<h4 class='item'>let randomId: unit => string</h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#value-toString", "title": "toString", "contents": "toString string Node buffer string  ", "rendered": "<h4 class='item'>let toString: (string, Node.buffer) => string</h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#value-randomBytes", "title": "randomBytes", "contents": "randomBytes int Node buffer ", "rendered": "<h4 class='item'>let randomBytes: int => Node.buffer</h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#value-md5OfString", "title": "md5OfString", "contents": "md5OfString string string ", "rendered": "<h4 class='item'>let md5OfString: string => string</h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#value-md5", "title": "md5", "contents": "md5 Node Buffer t string ", "rendered": "<h4 class='item'>let md5: Node.Buffer.t => string</h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#value-sha256", "title": "sha256", "contents": "sha256 string string ", "rendered": "<h4 class='item'>let sha256: string => string</h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#value-sha1", "title": "sha1", "contents": "sha1 Node Buffer t string ", "rendered": "<h4 class='item'>let sha1: Node.Buffer.t => string</h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#value-LegacyMd5.md5OfString", "title": "LegacyMd5.md5OfString", "contents": "md5OfString string string ", "rendered": "<h4 class='item'>let md5OfString: string => string</h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#module-LegacyMd5", "title": "LegacyMd5", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#module-LegacyMd5", "title": "LegacyMd5", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#value-Hash.digest", "title": "Hash.digest", "contents": "digest hash string string  ", "rendered": "<h4 class='item'>let digest: (<a href=\"./api/Hashes.html#type-Hash.hash\">hash</a>, string) => string</h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#value-Hash.updateWithString", "title": "Hash.updateWithString", "contents": "updateWithString hash string unit  ", "rendered": "<h4 class='item'>let updateWithString: (<a href=\"./api/Hashes.html#type-Hash.hash\">hash</a>, string) => unit</h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#value-Hash.update", "title": "Hash.update", "contents": "update hash Node Buffer t unit  ", "rendered": "<h4 class='item'>let update: (<a href=\"./api/Hashes.html#type-Hash.hash\">hash</a>, Node.Buffer.t) => unit</h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#value-Hash.createHash", "title": "Hash.createHash", "contents": "createHash string hash ", "rendered": "<h4 class='item'>let createHash: string => <a href=\"./api/Hashes.html#type-Hash.hash\">hash</a></h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#type-Hash.hash", "title": "Hash.hash", "contents": "hash ", "rendered": "<h4 class='item'>type hash</h4>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#module-Hash", "title": "Hash", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#module-Hash", "title": "Hash", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html", "title": "Hashes", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html", "title": "Hashes", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Hashes"},
{"href": "./api/Hashes.html#Hashes", "title": "Hashes", "contents": "", "rendered": "", "breadcrumb": "Hashes"},
{"href": "./api/Handler.html#value-handle", "title": "handle", "contents": "handle handler unit Express Middleware t ", "rendered": "<h4 class='item'>let handle: <a href=\"./api/Handler.html#type-handler\">handler</a>(unit) => Express.Middleware.t</h4>", "breadcrumb": "Handler"},
{"href": "./api/Handler.html#value-andThenHandle", "title": "andThenHandle", "contents": "andThenHandle middleware unit handler Express Middleware t  ", "rendered": "<h4 class='item'>let andThenHandle: (\n  <a href=\"./api/Handler.html#type-middleware\">middleware</a>(unit, 'a),\n  <a href=\"./api/Handler.html#type-handler\">handler</a>('a)\n) => Express.Middleware.t</h4>", "breadcrumb": "Handler"},
{"href": "./api/Handler.html#value-middlewareFromExpress", "title": "middlewareFromExpress", "contents": "middlewareFromExpress Express Middleware t middleware ", "rendered": "<h4 class='item'>let middlewareFromExpress: Express.Middleware.t => <a href=\"./api/Handler.html#type-middleware\">middleware</a>(\n  'a,\n  'a\n)</h4>", "breadcrumb": "Handler"},
{"href": "./api/Handler.html#value-_callExpressMiddleware", "title": "_callExpressMiddleware", "contents": "_callExpressMiddleware Express Middleware t _callableExpressMiddleware ", "rendered": "<h4 class='item'>let _callExpressMiddleware: Express.Middleware.t => <a href=\"./api/Handler.html#type-_callableExpressMiddleware\">_callableExpressMiddleware</a></h4>", "breadcrumb": "Handler"},
{"href": "./api/Handler.html#type-_callableExpressMiddleware", "title": "_callableExpressMiddleware", "contents": "_callableExpressMiddleware Express Request t Express Response t option exn unit  unit   ", "rendered": "<h4 class='item'>type _callableExpressMiddleware = (\n  Express.Request.t,\n  Express.Response.t,\n  option(exn) => unit\n) => unit</h4>", "breadcrumb": "Handler"},
{"href": "./api/Handler.html#value-andThen", "title": "andThen", "contents": "andThen middleware middleware middleware  ", "rendered": "<h4 class='item'>let andThen: (\n  <a href=\"./api/Handler.html#type-middleware\">middleware</a>('a, 'b),\n  <a href=\"./api/Handler.html#type-middleware\">middleware</a>('b, 'c)\n) => <a href=\"./api/Handler.html#type-middleware\">middleware</a>('a, 'c)</h4>", "breadcrumb": "Handler"},
{"href": "./api/Handler.html#value-_handleMiddleware", "title": "_handleMiddleware", "contents": "_handleMiddleware middleware unit Express complete Express Middleware t ", "rendered": "<h4 class='item'>let _handleMiddleware: <a href=\"./api/Handler.html#type-middleware\">middleware</a>(\n  unit,\n  Express.complete\n) => Express.Middleware.t</h4>", "breadcrumb": "Handler"},
{"href": "./api/Handler.html#value-_onError500", "title": "_onError500", "contents": "_onError500 handler middleware Express complete ", "rendered": "<h4 class='item'>let _onError500: <a href=\"./api/Handler.html#type-handler\">handler</a>('context) => <a href=\"./api/Handler.html#type-middleware\">middleware</a>(\n  'context,\n  Express.complete\n)</h4>", "breadcrumb": "Handler"},
{"href": "./api/Handler.html#value-pomTo500", "title": "pomTo500", "contents": "pomTo500 Express Response t pom pomWithError Express complete res ", "rendered": "<h4 class='item'>let pomTo500: (\n  ~res: Express.Response.t,\n  <a href=\"./api/Pom.html#type-pom\" title=\"Pom.pom\">pom</a>('a)\n) => <a href=\"./api/Pom.html#type-pomWithError\" title=\"Pom.pomWithError\">pomWithError</a>('a, Express.complete)</h4>", "breadcrumb": "Handler"},
{"href": "./api/Handler.html#type-handler", "title": "handler", "contents": "handler Express Request t Express Response t pom Express complete   ", "rendered": "<h4 class='item'>type handler('context) = (\n  Express.Request.t,\n  Express.Response.t,\n  'context\n) => <a href=\"./api/Pom.html#type-pom\" title=\"Pom.pom\">pom</a>(Express.complete)</h4>", "breadcrumb": "Handler"},
{"href": "./api/Handler.html#type-middleware", "title": "middleware", "contents": "middleware Express Request t Express Response t pomWithError Express complete   ", "rendered": "<h4 class='item'>type middleware('context, 'result) = (\n  Express.Request.t,\n  Express.Response.t,\n  'context\n) => <a href=\"./api/Pom.html#type-pomWithError\" title=\"Pom.pomWithError\">pomWithError</a>('result, Express.complete)</h4>", "breadcrumb": "Handler"},
{"href": "./api/Handler.html", "title": "Handler", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Handler"},
{"href": "./api/Handler.html", "title": "Handler", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Handler"},
{"href": "./api/Handler.html#Handler", "title": "Handler", "contents": "", "rendered": "", "breadcrumb": "Handler"},
{"href": "./api/ExpressExt.html#value-queryJson", "title": "queryJson", "contents": "queryJson Express Request t Js Json t ", "rendered": "<h4 class='item'>let queryJson: Express.Request.t => Js.Json.t</h4>", "breadcrumb": "ExpressExt"},
{"href": "./api/ExpressExt.html", "title": "ExpressExt", "contents": "@rest", "rendered": "@rest", "breadcrumb": "ExpressExt"},
{"href": "./api/ExpressExt.html", "title": "ExpressExt", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "ExpressExt"},
{"href": "./api/ExpressExt.html#ExpressExt", "title": "ExpressExt", "contents": "", "rendered": "", "breadcrumb": "ExpressExt"},
{"href": "./api/DecodeExt.html#value-logFailure", "title": "logFailure", "contents": "logFailure Belt Result t  Belt Result t unit message safeDecoder ", "rendered": "<h4 class='item'>let logFailure: (\n  ~message: 'a,\n  ~safeDecoder: 'a => Belt.Result.t('a, 'a),\n  'a\n) => Belt.Result.t('a, unit)</h4>", "breadcrumb": "DecodeExt"},
{"href": "./api/DecodeExt.html#value-safe", "title": "safe", "contents": "safe  exn unit  Belt Result t unit decoder onFail ", "rendered": "<h4 class='item'>let safe: (\n  ~decoder: 'a => 'a,\n  ~onFail: exn => unit,\n  'a\n) => Belt.Result.t('a, unit)</h4>", "breadcrumb": "DecodeExt"},
{"href": "./api/DecodeExt.html#value-base64", "title": "base64", "contents": "base64 Js Json t Node Buffer t ", "rendered": "<h4 class='item'>let base64: Js.Json.t => Node.Buffer.t</h4>", "breadcrumb": "DecodeExt"},
{"href": "./api/DecodeExt.html#value-stringArrayFromQuery", "title": "stringArrayFromQuery", "contents": "stringArrayFromQuery Js Json t array Js String t ", "rendered": "<h4 class='item'>let stringArrayFromQuery: Js.Json.t => array(Js.String.t)</h4>", "breadcrumb": "DecodeExt"},
{"href": "./api/DecodeExt.html#value-boolFromQuery", "title": "boolFromQuery", "contents": "boolFromQuery Js Json t bool ", "rendered": "<h4 class='item'>let boolFromQuery: Js.Json.t => bool</h4>", "breadcrumb": "DecodeExt"},
{"href": "./api/DecodeExt.html#value-first", "title": "first", "contents": "first Json Decode decoder Js Json t  ", "rendered": "<h4 class='item'>let first: (Json.Decode.decoder('a), Js.Json.t) => 'a</h4>", "breadcrumb": "DecodeExt"},
{"href": "./api/DecodeExt.html", "title": "DecodeExt", "contents": "@rest", "rendered": "@rest", "breadcrumb": "DecodeExt"},
{"href": "./api/DecodeExt.html", "title": "DecodeExt", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "DecodeExt"},
{"href": "./api/DecodeExt.html#DecodeExt", "title": "DecodeExt", "contents": "", "rendered": "", "breadcrumb": "DecodeExt"},
{"href": "./api/DateExt.html#value-isBefore", "title": "isBefore", "contents": "isBefore Js Date t Js Date t bool  ", "rendered": "<h4 class='item'>let isBefore: (Js.Date.t, Js.Date.t) => bool</h4>", "breadcrumb": "DateExt"},
{"href": "./api/DateExt.html", "title": "DateExt", "contents": "@rest", "rendered": "@rest", "breadcrumb": "DateExt"},
{"href": "./api/DateExt.html", "title": "DateExt", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "DateExt"},
{"href": "./api/DateExt.html#DateExt", "title": "DateExt", "contents": "", "rendered": "", "breadcrumb": "DateExt"},
{"href": "./api/DB.html#value-performRaw", "title": "performRaw", "contents": "performRaw option string pomWithError Js Json t Js Promise error values ", "rendered": "<h4 class='item'>let performRaw: (\n  ~?values: option(\n    [ `Eight of 's * 't * 'u * 'v * 'w * 'x * 'y * 'z\n| `Five of 's * 't * 'u * 'v * 'w\n| `Four of 's * 't * 'u * 'v\n| `Nine of 's * 't * 'u * 'v * 'w * 'x * 'y * 'z * 'a1\n| `One of 's\n| `Seven of 's * 't * 'u * 'v * 'w * 'x * 'y\n| `Six of 's * 't * 'u * 'v * 'w * 'x\n| `Three of 's * 't * 'u\n| `Two of 's * 't ]\n  ),\n  string\n) => <a href=\"./api/Pom.html#type-pomWithError\" title=\"Pom.pomWithError\">pomWithError</a>(Js.Json.t, Js.Promise.error)</h4>", "breadcrumb": "DB"},
{"href": "./api/DB.html#value-perform", "title": "perform", "contents": "perform builder pomWithError Js Json t Js Promise error ", "rendered": "<h4 class='item'>let perform: <a href=\"./api/Bricks.html#type-builder\" title=\"Bricks.builder\">builder</a> => <a href=\"./api/Pom.html#type-pomWithError\" title=\"Pom.pomWithError\">pomWithError</a>(\n  Js.Json.t,\n  Js.Promise.error\n)</h4>", "breadcrumb": "DB"},
{"href": "./api/DB.html#value-getPool", "title": "getPool", "contents": "getPool unit pool ", "rendered": "<h4 class='item'>let getPool: unit => <a href=\"./api/Pg.html#type-pool\" title=\"Pg.pool\">pool</a></h4>", "breadcrumb": "DB"},
{"href": "./api/DB.html#value-connect", "title": "connect", "contents": "connect string unit ", "rendered": "<h4 class='item'>let connect: string => unit</h4>", "breadcrumb": "DB"},
{"href": "./api/DB.html#value-pool", "title": "pool", "contents": "pool Pervasives ref option pool", "rendered": "<h4 class='item'>let pool: Pervasives.ref(option(<a href=\"./api/Pg.html#type-pool\" title=\"Pg.pool\">pool</a>))</h4>", "breadcrumb": "DB"},
{"href": "./api/DB.html#value-Abstract.performRaw", "title": "Abstract.performRaw", "contents": "performRaw pool option string pomWithError Js Json t Js Promise error  values ", "rendered": "<h4 class='item'>let performRaw: (\n  <a href=\"./api/Pg.html#type-pool\" title=\"Pg.pool\">pool</a>,\n  ~?values: option(\n    [ `Eight of 'j * 'k * 'l * 'm * 'n * 'o * 'p * 'q\n| `Five of 'j * 'k * 'l * 'm * 'n\n| `Four of 'j * 'k * 'l * 'm\n| `Nine of 'j * 'k * 'l * 'm * 'n * 'o * 'p * 'q * 'r\n| `One of 'j\n| `Seven of 'j * 'k * 'l * 'm * 'n * 'o * 'p\n| `Six of 'j * 'k * 'l * 'm * 'n * 'o\n| `Three of 'j * 'k * 'l\n| `Two of 'j * 'k ]\n  ),\n  string\n) => <a href=\"./api/Pom.html#type-pomWithError\" title=\"Pom.pomWithError\">pomWithError</a>(Js.Json.t, Js.Promise.error)</h4>", "breadcrumb": "DB"},
{"href": "./api/DB.html#value-Abstract.perform", "title": "Abstract.perform", "contents": "perform pool builder pomWithError Js Json t Js Promise error  ", "rendered": "<h4 class='item'>let perform: (<a href=\"./api/Pg.html#type-pool\" title=\"Pg.pool\">pool</a>, <a href=\"./api/Bricks.html#type-builder\" title=\"Bricks.builder\">builder</a>) => <a href=\"./api/Pom.html#type-pomWithError\" title=\"Pom.pomWithError\">pomWithError</a>(\n  Js.Json.t,\n  Js.Promise.error\n)</h4>", "breadcrumb": "DB"},
{"href": "./api/DB.html#module-Abstract", "title": "Abstract", "contents": "@rest", "rendered": "@rest", "breadcrumb": "DB"},
{"href": "./api/DB.html#module-Abstract", "title": "Abstract", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "DB"},
{"href": "./api/DB.html", "title": "DB", "contents": "@rest", "rendered": "@rest", "breadcrumb": "DB"},
{"href": "./api/DB.html", "title": "DB", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "DB"},
{"href": "./api/DB.html#DB", "title": "DB", "contents": "", "rendered": "", "breadcrumb": "DB"},
{"href": "./api/Cuid.html#value-generate", "title": "generate", "contents": "generate unit string ", "rendered": "<h4 class='item'>let generate: unit => string</h4>", "breadcrumb": "Cuid"},
{"href": "./api/Cuid.html", "title": "Cuid", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Cuid"},
{"href": "./api/Cuid.html", "title": "Cuid", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Cuid"},
{"href": "./api/Cuid.html#Cuid", "title": "Cuid", "contents": "", "rendered": "", "breadcrumb": "Cuid"},
{"href": "./api/ConfigTools.html#value-port", "title": "port", "contents": "port int", "rendered": "<h4 class='item'>let port: int</h4>", "breadcrumb": "ConfigTools"},
{"href": "./api/ConfigTools.html#value-logLevel", "title": "logLevel", "contents": "logLevel string", "rendered": "<h4 class='item'>let logLevel: string</h4>", "breadcrumb": "ConfigTools"},
{"href": "./api/ConfigTools.html#value-isDev", "title": "isDev", "contents": "isDev bool", "rendered": "<h4 class='item'>let isDev: bool</h4>", "breadcrumb": "ConfigTools"},
{"href": "./api/ConfigTools.html#value-isProduction", "title": "isProduction", "contents": "isProduction bool", "rendered": "<h4 class='item'>let isProduction: bool</h4>", "breadcrumb": "ConfigTools"},
{"href": "./api/ConfigTools.html#value-envName", "title": "envName", "contents": "envName string", "rendered": "<h4 class='item'>let envName: string</h4>", "breadcrumb": "ConfigTools"},
{"href": "./api/ConfigTools.html#value-fromEnv", "title": "fromEnv", "contents": "fromEnv string string string  ", "rendered": "<h4 class='item'>let fromEnv: (string, string) => string</h4>", "breadcrumb": "ConfigTools"},
{"href": "./api/ConfigTools.html", "title": "ConfigTools", "contents": "@rest", "rendered": "@rest", "breadcrumb": "ConfigTools"},
{"href": "./api/ConfigTools.html", "title": "ConfigTools", "contents": "We&#39;ve also provided a few built-in values that are generally needed\nin server development.", "rendered": "We&#39;ve also provided a few built-in values that are generally needed\nin server development.", "breadcrumb": "ConfigTools"},
{"href": "./api/ConfigTools.html", "title": "ConfigTools", "contents": "We&#39;ve provided fromEnv as a tool to easily fetch a string from\nthe environment, and use a fallback value if the string isn&#39;t set.", "rendered": "We&#39;ve provided <code>fromEnv</code> as a tool to easily fetch a string from\nthe environment, and use a fallback value if the string isn&#39;t set.", "breadcrumb": "ConfigTools"},
{"href": "./api/ConfigTools.html", "title": "ConfigTools", "contents": "We&#39;ve found that a useful convention is to have a module named\n&quot;Config.re&quot;, where all values settable by ENV vars are collected\ninto one place.", "rendered": "We&#39;ve found that a useful convention is to have a module named\n&quot;Config.re&quot;, where all values settable by ENV vars are collected\ninto one place.", "breadcrumb": "ConfigTools"},
{"href": "./api/ConfigTools.html#ConfigTools", "title": "ConfigTools", "contents": "", "rendered": "", "breadcrumb": "ConfigTools"},
{"href": "./api/Bricks.html#value-toString", "title": "toString", "contents": "toString builder string ", "rendered": "<h4 class='item'>let toString: <a href=\"./api/Bricks.html#type-builder\">builder</a> => string</h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-toPayload", "title": "toPayload", "contents": "toPayload builder queryPayload ", "rendered": "<h4 class='item'>let toPayload: <a href=\"./api/Bricks.html#type-builder\">builder</a> => <a href=\"./api/Pg.html#type-queryPayload\" title=\"Pg.queryPayload\">queryPayload</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-returning", "title": "returning", "contents": "returning builder string builder  ", "rendered": "<h4 class='item'>let returning: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-doUpdateOne", "title": "doUpdateOne", "contents": "doUpdateOne onConflictBuilder string builder  ", "rendered": "<h4 class='item'>let doUpdateOne: (<a href=\"./api/Bricks.html#type-onConflictBuilder\">onConflictBuilder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-doNothing", "title": "doNothing", "contents": "doNothing onConflictBuilder builder ", "rendered": "<h4 class='item'>let doNothing: <a href=\"./api/Bricks.html#type-onConflictBuilder\">onConflictBuilder</a> => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-doUpdate", "title": "doUpdate", "contents": "doUpdate onConflictBuilder builder ", "rendered": "<h4 class='item'>let doUpdate: <a href=\"./api/Bricks.html#type-onConflictBuilder\">onConflictBuilder</a> => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-onConflict", "title": "onConflict", "contents": "onConflict builder string onConflictBuilder  ", "rendered": "<h4 class='item'>let onConflict: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-onConflictBuilder\">onConflictBuilder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-onConflict2", "title": "onConflict2", "contents": "onConflict2 builder string string onConflictBuilder   ", "rendered": "<h4 class='item'>let onConflict2: (\n  <a href=\"./api/Bricks.html#type-builder\">builder</a>,\n  string,\n  string\n) => <a href=\"./api/Bricks.html#type-onConflictBuilder\">onConflictBuilder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#type-onConflictBuilder", "title": "onConflictBuilder", "contents": "onConflictBuilder ", "rendered": "<h4 class='item'>type onConflictBuilder</h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-whereOpt", "title": "whereOpt", "contents": "whereOpt builder option whereExpr builder  ", "rendered": "<h4 class='item'>let whereOpt: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, option(<a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a>)) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-set", "title": "set", "contents": "set builder string builder  column ", "rendered": "<h4 class='item'>let set: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, ~column: string, 'a) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-forUpdate", "title": "forUpdate", "contents": "forUpdate builder unit builder  ", "rendered": "<h4 class='item'>let forUpdate: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, unit) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-orderBy", "title": "orderBy", "contents": "orderBy builder array string builder  ", "rendered": "<h4 class='item'>let orderBy: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, array(string)) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-orderByOne", "title": "orderByOne", "contents": "orderByOne builder string builder  ", "rendered": "<h4 class='item'>let orderByOne: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-having", "title": "having", "contents": "having builder string builder  column ", "rendered": "<h4 class='item'>let having: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, ~column: string, 'a) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-groupBy", "title": "groupBy", "contents": "groupBy builder array string builder  ", "rendered": "<h4 class='item'>let groupBy: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, array(string)) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-groupByOne", "title": "groupByOne", "contents": "groupByOne builder string builder  ", "rendered": "<h4 class='item'>let groupByOne: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-where", "title": "where", "contents": "where builder whereExpr builder  ", "rendered": "<h4 class='item'>let where: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a>) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-whereAll", "title": "whereAll", "contents": "whereAll builder Js t builder  ", "rendered": "<h4 class='item'>let whereAll: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, Js.t('a)) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-whereEq", "title": "whereEq", "contents": "whereEq builder string string builder   ", "rendered": "<h4 class='item'>let whereEq: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-on", "title": "on", "contents": "on builder Js t builder  ", "rendered": "<h4 class='item'>let on: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, Js.t('a)) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-crossJoin", "title": "crossJoin", "contents": "crossJoin builder string builder  ", "rendered": "<h4 class='item'>let crossJoin: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-fullJoin", "title": "fullJoin", "contents": "fullJoin builder string builder  ", "rendered": "<h4 class='item'>let fullJoin: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-rightJoin", "title": "rightJoin", "contents": "rightJoin builder string builder  ", "rendered": "<h4 class='item'>let rightJoin: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-leftJoin", "title": "leftJoin", "contents": "leftJoin builder string builder  ", "rendered": "<h4 class='item'>let leftJoin: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-join", "title": "join", "contents": "join builder string builder  ", "rendered": "<h4 class='item'>let join: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-from", "title": "from", "contents": "from builder string builder  ", "rendered": "<h4 class='item'>let from: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-intoTemp", "title": "intoTemp", "contents": "intoTemp builder string builder  ", "rendered": "<h4 class='item'>let intoTemp: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-into", "title": "into", "contents": "into builder string builder  ", "rendered": "<h4 class='item'>let into: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-limit", "title": "limit", "contents": "limit builder int builder  ", "rendered": "<h4 class='item'>let limit: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, int) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-offset", "title": "offset", "contents": "offset builder int builder  ", "rendered": "<h4 class='item'>let offset: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, int) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-andSelect", "title": "andSelect", "contents": "andSelect builder string builder  ", "rendered": "<h4 class='item'>let andSelect: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, string) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-distinct", "title": "distinct", "contents": "distinct builder array string builder  cols", "rendered": "<h4 class='item'>let distinct: (<a href=\"./api/Bricks.html#type-builder\">builder</a>, ~cols: array(string)) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-select", "title": "select", "contents": "select string builder ", "rendered": "<h4 class='item'>let select: string => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-delete", "title": "delete", "contents": "delete unit builder ", "rendered": "<h4 class='item'>let delete: unit => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-updateJson", "title": "updateJson", "contents": "updateJson string Js Json t builder table ", "rendered": "<h4 class='item'>let updateJson: (~table: string, Js.Json.t) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-update", "title": "update", "contents": "update string Js t builder table ", "rendered": "<h4 class='item'>let update: (~table: string, Js.t('a)) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-jsonValues", "title": "jsonValues", "contents": "jsonValues insertBuilder array Js Json t builder  ", "rendered": "<h4 class='item'>let jsonValues: (<a href=\"./api/Bricks.html#type-insertBuilder\">insertBuilder</a>, array(Js.Json.t)) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-jsonValue", "title": "jsonValue", "contents": "jsonValue insertBuilder Js Json t builder  ", "rendered": "<h4 class='item'>let jsonValue: (<a href=\"./api/Bricks.html#type-insertBuilder\">insertBuilder</a>, Js.Json.t) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-valueJson", "title": "valueJson", "contents": "valueJson insertBuilder Js Json t builder  ", "rendered": "<h4 class='item'>let valueJson: (<a href=\"./api/Bricks.html#type-insertBuilder\">insertBuilder</a>, Js.Json.t) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-value", "title": "value", "contents": "value insertBuilder Js t builder  ", "rendered": "<h4 class='item'>let value: (<a href=\"./api/Bricks.html#type-insertBuilder\">insertBuilder</a>, Js.t('a)) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-valuesJson", "title": "valuesJson", "contents": "valuesJson insertBuilder array Js Json t builder  ", "rendered": "<h4 class='item'>let valuesJson: (<a href=\"./api/Bricks.html#type-insertBuilder\">insertBuilder</a>, array(Js.Json.t)) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-values", "title": "values", "contents": "values insertBuilder array Js t builder  ", "rendered": "<h4 class='item'>let values: (<a href=\"./api/Bricks.html#type-insertBuilder\">insertBuilder</a>, array(Js.t('a))) => <a href=\"./api/Bricks.html#type-builder\">builder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-insertInto", "title": "insertInto", "contents": "insertInto string insertBuilder ", "rendered": "<h4 class='item'>let insertInto: string => <a href=\"./api/Bricks.html#type-insertBuilder\">insertBuilder</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#type-insertBuilder", "title": "insertBuilder", "contents": "insertBuilder ", "rendered": "<h4 class='item'>type insertBuilder</h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-isNot", "title": "isNot", "contents": "isNot whereExpr whereExpr ", "rendered": "<h4 class='item'>let isNot: <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a> => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-in_", "title": "in_", "contents": "in_ string array whereExpr col ", "rendered": "<h4 class='item'>let in_: (~col: string, array('a)) => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-exists", "title": "exists", "contents": "exists builder whereExpr subquery", "rendered": "<h4 class='item'>let exists: (~subquery: <a href=\"./api/Bricks.html#type-builder\">builder</a>) => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-like", "title": "like", "contents": "like string string whereExpr col ", "rendered": "<h4 class='item'>let like: (~col: string, string) => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-isNotNull", "title": "isNotNull", "contents": "isNotNull string whereExpr ", "rendered": "<h4 class='item'>let isNotNull: string => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-isNull", "title": "isNull", "contents": "isNull string whereExpr ", "rendered": "<h4 class='item'>let isNull: string => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-between", "title": "between", "contents": "between string whereExpr col bottom top", "rendered": "<h4 class='item'>let between: (\n  ~col: string,\n  ~bottom: 'a,\n  ~top: 'a\n) => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-gte", "title": "gte", "contents": "gte string whereExpr col ", "rendered": "<h4 class='item'>let gte: (~col: string, 'a) => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-gt", "title": "gt", "contents": "gt string whereExpr col ", "rendered": "<h4 class='item'>let gt: (~col: string, 'a) => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-lte", "title": "lte", "contents": "lte string whereExpr col ", "rendered": "<h4 class='item'>let lte: (~col: string, 'a) => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-lt", "title": "lt", "contents": "lt string whereExpr col ", "rendered": "<h4 class='item'>let lt: (~col: string, 'a) => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-notEq", "title": "notEq", "contents": "notEq string whereExpr col ", "rendered": "<h4 class='item'>let notEq: (~col: string, 'a) => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-eq", "title": "eq", "contents": "eq string whereExpr col ", "rendered": "<h4 class='item'>let eq: (~col: string, 'a) => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-not", "title": "not", "contents": "not whereExpr whereExpr ", "rendered": "<h4 class='item'>let not: <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a> => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-or_", "title": "or_", "contents": "or_ array whereExpr whereExpr ", "rendered": "<h4 class='item'>let or_: array(<a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a>) => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-and_", "title": "and_", "contents": "and_ array whereExpr whereExpr ", "rendered": "<h4 class='item'>let and_: array(<a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a>) => <a href=\"./api/Bricks.html#type-whereExpr\">whereExpr</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#type-whereExpr", "title": "whereExpr", "contents": "whereExpr ", "rendered": "<h4 class='item'>type whereExpr</h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-sqlWithValues", "title": "sqlWithValues", "contents": "sqlWithValues string fragment text values", "rendered": "<h4 class='item'>let sqlWithValues: (\n  ~text: string,\n  ~values: [ `Eight of 'a * 'b * 'c * 'd * 'e * 'f * 'g * 'h\n| `Five of 'a * 'b * 'c * 'd * 'e\n| `Four of 'a * 'b * 'c * 'd\n| `Nine of 'a * 'b * 'c * 'd * 'e * 'f * 'g * 'h * 'i\n| `One of 'a\n| `Seven of 'a * 'b * 'c * 'd * 'e * 'f * 'g\n| `Six of 'a * 'b * 'c * 'd * 'e * 'f\n| `Three of 'a * 'b * 'c\n| `Two of 'a * 'b ]\n) => <a href=\"./api/Bricks.html#type-fragment\">fragment</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-sql", "title": "sql", "contents": "sql string fragment ", "rendered": "<h4 class='item'>let sql: string => <a href=\"./api/Bricks.html#type-fragment\">fragment</a></h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-omitByJson", "title": "omitByJson", "contents": "omitByJson Js Json t bool  Js Json t  ", "rendered": "<h4 class='item'>let omitByJson: (Js.Json.t, 'b => bool) => Js.Json.t</h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#value-omitBy", "title": "omitBy", "contents": "omitBy Js t bool  Js t  ", "rendered": "<h4 class='item'>let omitBy: (Js.t('a), 'b => bool) => Js.t('c)</h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#type-fragment", "title": "fragment", "contents": "fragment Js t", "rendered": "<h4 class='item'>type fragment = Js.t(\n  &lt; str : string; vals : Pg.values &gt;\n)</h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#type-builder", "title": "builder", "contents": "builder ", "rendered": "<h4 class='item'>type builder</h4>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html", "title": "Bricks", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html", "title": "Bricks", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Bricks"},
{"href": "./api/Bricks.html#Bricks", "title": "Bricks", "contents": "", "rendered": "", "breadcrumb": "Bricks"}]